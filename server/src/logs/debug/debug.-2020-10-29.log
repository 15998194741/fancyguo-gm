[2020-10-29T08:25:40.531] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T08:25:40.548] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-29T08:25:40.549] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T08:25:40.555] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.556] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.557] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T08:25:40.574] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.576] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.577] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.582] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.588] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-29T08:25:40.593] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.602] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-29T08:25:40.603] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.607] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.617] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.618] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.680] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.684] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.690] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.690] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.692] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.696] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.696] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.708] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:25:40.709] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T08:30:36.443] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-29T08:30:37.243] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-29T08:30:37.601] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:30:37.608] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:30:37.617] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:31:51.569] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:31:51.577] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:31:51.589] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:31:55.399] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:31:55.406] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:31:55.415] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:33:18.328] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:33:18.340] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:33:18.353] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:33:29.119] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-29T08:33:29.204] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-29T08:33:29.550] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:33:29.557] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:33:29.566] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:33:45.243] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-29T08:33:45.301] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-29T08:33:45.651] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:33:45.658] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:33:45.693] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:35:08.090] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '10'::int then id != '5' else id = '10' end and status = '1'
[2020-10-29T08:36:54.064] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:36:54.072] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:36:54.083] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:38:15.408] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:38:15.416] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:38:15.427] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:38:32.465] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T08:38:32.472] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T08:38:32.481] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T08:38:35.438] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '10'::int then id != '5' else id = '10' end and status = '1'
[2020-10-29T11:08:47.230] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '空翼冒险团' limit 1
[2020-10-29T11:08:47.242] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T11:08:47.254] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T11:09:04.609] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '空翼冒险团' limit 1
[2020-10-29T11:09:04.617] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T11:09:04.626] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T11:21:47.744] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '空翼冒险团' limit 1
[2020-10-29T11:21:47.751] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T11:21:47.764] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T11:21:52.877] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = 'CSGO' limit 1
[2020-10-29T11:21:52.885] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '12' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T11:21:52.895] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:49:02.834] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-29T13:49:03.031] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-29T13:49:03.088] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-29T13:49:03.096] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:49:03.107] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:49:08.242] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '10' and status = '1'
[2020-10-29T13:49:08.294] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =10 and status  = 1  ) a
[2020-10-29T13:49:08.380] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=10
[2020-10-29T13:49:08.738] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '10'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:08.746] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '10' and status = 1
[2020-10-29T13:49:09.292] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '10'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:09.300] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '10' and status = 1
[2020-10-29T13:49:09.766] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '10'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:09.774] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '10' and status = 1
[2020-10-29T13:49:10.016] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '10'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:10.024] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '10' and status = 1
[2020-10-29T13:49:12.109] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '疯猴子砍猪' limit 1
[2020-10-29T13:49:12.117] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '3' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:49:12.125] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:49:13.709] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '3' and status = '1'
[2020-10-29T13:49:13.807] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =3 and status  = 1  ) a
[2020-10-29T13:49:13.871] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=3
[2020-10-29T13:49:13.914] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:13.924] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:14.226] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:14.234] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:14.691] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:14.699] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:14.946] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:14.954] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:15.016] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:15.023] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:15.269] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:15.280] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:15.740] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:15.748] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:16.204] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:16.212] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:16.456] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:16.465] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:29.775] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:29.786] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:29.998] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:30.007] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:30.104] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '3'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-29T13:49:30.113] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '3' and status = 1
[2020-10-29T13:49:30.867] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 3
[2020-10-29T13:49:31.171] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =3 and classification = 'undefined'
[2020-10-29T13:49:31.223] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =3 GROUP BY classification
[2020-10-29T13:49:31.579] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =3 and classification = 'undefined'
[2020-10-29T13:49:37.886] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =3 and classification = 'undefined'
[2020-10-29T13:49:39.872] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '3' and status = '1'
[2020-10-29T13:49:39.961] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='3' and status = 1
[2020-10-29T13:49:40.337] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:40.346] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:40.807] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:40.815] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:41.059] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:41.067] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:41.129] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:41.136] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=3  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:43.889] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '刺客信条' limit 1
[2020-10-29T13:49:43.900] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '11' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:49:43.914] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:49:45.721] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '天龙八部' limit 1
[2020-10-29T13:49:45.728] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:49:45.737] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:49:47.220] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '10' and status = '1'
[2020-10-29T13:49:47.298] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='10' and status = 1
[2020-10-29T13:49:48.192] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:48.201] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:48.443] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:48.450] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:48.515] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:48.523] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:48.765] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:48.773] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:48.838] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:49:48.846] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:49:53.109] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T13:49:57.885] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '10' and status = '1'
[2020-10-29T13:49:58.217] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='10' and status = 1
[2020-10-29T13:50:08.892] [DEBUG] debugLogger - Executing (default): insert into gm_announcement 
		  (title,text,game_id,img_url,plaform,client,link,bulletinid,create_user_id,type,servername,range) 
		  VALUES
		  ('2','2','10',null,'[""]'::jsonb,array[''],'3','','79',2,array[''],'1') returning id
[2020-10-29T13:50:08.900] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','创建公告','公告管理','创建了ID为 125 的 公告板 ','10','长澜月','{"bulletinid":"","stime":"","etime":"","plaform":"","channel":"","servername":"","interval":"","weights":"","title":"2","images":"","a":"3","text":"2","range":"1","type":"2","gameid":"10"}')
[2020-10-29T13:50:09.285] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:50:09.296] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:50:09.304] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:50:09.312] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:50:13.904] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T13:50:14.249] [DEBUG] debugLogger - Executing (default): select * , (nick_name || "alias" ) as  usernames from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$  ORDER BY  operating_time  desc  limit 100 OFFSET 0
[2020-10-29T13:50:14.294] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$
[2020-10-29T13:50:54.351] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '10' and status = '1'
[2020-10-29T13:50:54.577] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='10' and status = 1
[2020-10-29T13:50:55.484] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:50:55.494] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:50:55.931] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:50:55.939] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:50:57.312] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','停用公告','公告管理','停用了ID为 124 的 公告板 ','10','长澜月','{"gameid":"10","id":"124","status":"1","anno_status":"待用","title":"111","game_id":"10","text":"111111","link":"111","stime":"","etime":"","type":"公告板","changeshow":"true","stopshow":"true"}')
[2020-10-29T13:50:57.320] [DEBUG] debugLogger - Executing (default): update gm_announcement set anno_status=1,status = 0 where id = '124' returning id
[2020-10-29T13:50:59.018] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','停用公告','公告管理','停用了ID为 123 的 公告板 ','10','长澜月','{"gameid":"10","id":"123","status":"1","anno_status":"待用","title":"11111","game_id":"10","text":"111","link":"111","stime":"","etime":"","type":"公告板","changeshow":"true","stopshow":"true"}')
[2020-10-29T13:50:59.018] [DEBUG] debugLogger - Executing (default): update gm_announcement set anno_status=1,status = 0 where id = '123' returning id
[2020-10-29T13:51:00.187] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','停用公告','公告管理','停用了ID为 125 的 公告板 ','10','长澜月','{"gameid":"10","id":"125","status":"1","anno_status":"待用","title":"2","game_id":"10","text":"2","link":"3","stime":"","etime":"","type":"公告板","changeshow":"true","stopshow":"true"}')
[2020-10-29T13:51:00.187] [DEBUG] debugLogger - Executing (default): update gm_announcement set anno_status=1,status = 0 where id = '125' returning id
[2020-10-29T13:51:01.350] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:51:01.358] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:51:01.810] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-10-29T13:51:01.817] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=10  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-10-29T13:51:04.646] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '天龙八部' limit 1
[2020-10-29T13:51:04.655] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:51:04.717] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:51:05.074] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '10' and status = '1'
[2020-10-29T13:51:05.146] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='10' and status = 1
[2020-10-29T13:51:49.858] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T13:51:50.123] [DEBUG] debugLogger - Executing (default): select * , (nick_name || "alias" ) as  usernames from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$  ORDER BY  operating_time  desc  limit 100 OFFSET 0
[2020-10-29T13:51:50.132] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$
[2020-10-29T13:53:18.372] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '天龙八部' limit 1
[2020-10-29T13:53:18.380] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:53:18.390] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:53:18.636] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T13:53:18.704] [DEBUG] debugLogger - Executing (default): select * , (nick_name || "alias" ) as  usernames from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$  ORDER BY  operating_time  desc  limit 100 OFFSET 0
[2020-10-29T13:53:18.716] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$
[2020-10-29T13:53:19.629] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '天龙八部' limit 1
[2020-10-29T13:53:19.636] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '10' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-29T13:53:19.648] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-29T13:53:20.120] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T13:53:20.171] [DEBUG] debugLogger - Executing (default): select * , (nick_name || "alias" ) as  usernames from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$  ORDER BY  operating_time  desc  limit 100 OFFSET 0
[2020-10-29T13:53:20.181] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_logs  where game_id= $$10$$ and classification = $classification$公告管理$classification$
[2020-10-29T14:27:22.278] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$10$gameid$ GROUP BY classification
[2020-10-29T14:28:10.582] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T14:28:10.585] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-29T14:28:10.586] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T14:28:10.592] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.592] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.596] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-29T14:28:10.599] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.600] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.602] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.608] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.609] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-29T14:28:10.612] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.613] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-29T14:28:10.617] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.625] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.625] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.626] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.626] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.654] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.664] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.665] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.666] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.666] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.671] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.690] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-29T14:28:10.691] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
