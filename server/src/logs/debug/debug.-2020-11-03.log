[2020-11-03T10:42:56.687] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:42:56.693] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T10:42:56.694] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:42:56.695] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.699] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.702] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:42:56.709] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.709] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.710] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.713] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.717] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T10:42:56.722] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.723] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T10:42:56.723] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.728] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.728] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.734] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.735] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.760] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.766] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.768] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.769] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.769] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.772] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.777] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:42:56.784] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:43:41.638] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T10:43:41.653] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T10:43:41.668] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T10:43:42.253] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T10:43:42.262] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T10:43:42.273] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T10:43:48.248] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:48.354] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:48.465] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:43:51.128] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '17'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:43:51.138] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '17'::int
[2020-11-03T10:43:52.554] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:52.898] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:53.152] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:43:54.302] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:43:54.311] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:43:55.223] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:55.476] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:43:55.561] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:43:56.266] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:43:58.212] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '16'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:43:58.220] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '16'::int
[2020-11-03T10:44:00.822] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '16'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:00.830] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '16'::int
[2020-11-03T10:44:02.638] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:02.982] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:03.235] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:05.875] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '11'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:05.882] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '11'::int
[2020-11-03T10:44:10.576] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '11'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:10.589] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '11'::int
[2020-11-03T10:44:10.808] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '11'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:10.819] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '11'::int
[2020-11-03T10:44:13.138] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:13.148] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T10:44:16.654] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:16.661] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T10:44:16.903] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:16.911] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T10:44:18.126] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:18.137] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:44:18.976] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:19.223] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:19.325] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:23.394] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '11'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:23.404] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '11'::int
[2020-11-03T10:44:27.526] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:27.535] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:44:28.459] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:28.816] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:29.066] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:29.723] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:29.736] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:44:30.931] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:31.186] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:44:31.271] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:31.705] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:44:35.823] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '17'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:44:35.831] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '17'::int
[2020-11-03T10:45:41.531] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:45:41.541] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T10:45:42.570] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:45:42.915] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:45:43.164] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:43.529] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:45.248] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:45:45.256] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T10:45:47.116] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:45:47.460] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:45:47.713] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:49.926] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:45:49.935] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T10:45:51.900] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:51.907] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T10:45:52.151] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:52.161] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T10:45:56.258] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:45:56.266] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T10:46:09.309] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:46:09.525] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:46:09.650] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:46:12.590] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:46:29.399] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','123123','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T10:46:29.452] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"123123","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:46:29.561] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:48:27.575] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:48:27.578] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T10:48:27.582] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:48:27.582] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.583] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.585] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:48:27.588] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.591] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.591] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.593] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.595] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T10:48:27.597] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.600] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T10:48:27.602] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.605] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.606] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.608] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.610] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.620] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.623] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.624] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.629] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.630] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.633] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.635] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:27.636] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:48:29.570] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:50:28.573] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:52:04.175] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T10:52:04.186] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T10:52:04.200] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T10:52:05.115] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:52:05.404] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T10:52:05.576] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:52:11.579] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:52:33.440] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T10:52:35.991] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:52:36.366] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:53:33.449] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:53:33.451] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T10:53:33.454] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:53:33.455] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.455] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.461] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:53:33.461] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.463] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.466] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.466] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.470] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T10:53:33.472] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.474] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T10:53:33.476] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.476] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.478] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.479] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.481] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.488] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.490] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.494] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.498] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.505] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.505] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.507] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:33.508] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:53:44.584] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:53:52.904] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T10:53:52.941] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:53:53.316] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:55:26.353] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:55:26.355] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T10:55:26.359] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:55:26.361] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.367] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.369] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T10:55:26.373] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.380] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.553] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.581] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.586] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T10:55:26.800] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T10:55:26.973] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T10:55:27.011] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.028] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.038] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.049] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.061] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.076] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.180] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.192] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.194] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.197] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.201] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.206] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:27.429] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T10:55:37.936] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:55:49.544] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T10:55:49.641] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:55:50.008] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:56:11.380] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T10:56:19.579] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T10:56:21.737] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:56:22.103] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T10:56:49.024] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:56:49.036] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:56:50.003] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T10:56:53.927] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T10:56:55.118] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T10:56:56.413] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T10:56:58.593] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '礼包'
[2020-11-03T10:57:01.351] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T10:57:01.763] [DEBUG] debugLogger - Executing (default): insert into gm_white_smtp 
		( create_user_id , game_id ,  title,text,sendtype ,cycle,annex)
		values 
		('79'  , '1','12123','123123',true,'week','[{"name":"5001","number":1}]')
		returning id
[2020-11-03T10:57:01.801] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件创建','白名单管理','创建了id为19白名单周度 周期 邮件。','1','长澜月','{"title":"12123","text":"123123","sendType":true,"cycle":"week","annex":[{"annexName":["礼包","5001"],"annexNumber":"1","id":0}],"gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T10:57:04.242] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:04.249] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:57:04.563] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:04.572] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:57:04.890] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:04.898] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:57:05.213] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:05.221] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:57:35.363] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.sendtype = true ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:35.373] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.sendtype = true
[2020-11-03T10:57:36.961] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.sendtype = false ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:36.971] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.sendtype = false
[2020-11-03T10:57:56.036] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:57:56.046] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:58:28.019] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:58:28.030] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:58:28.433] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:58:28.652] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:03.609] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:04.235] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:05.219] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:05.227] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:05.846] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:05.853] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:06.168] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:06.175] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:07.772] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:07.779] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:17.236] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:17.244] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:17.311] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:17.319] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:17.567] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:17.577] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:17.647] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:17.656] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:25.787] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:25.794] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:47.965] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:48.180] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:48.641] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:48.653] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:49.446] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:49.453] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:50.181] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:50.191] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:50.871] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:50.880] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:51.408] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:51.418] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:51.968] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:51.975] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:52.557] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:52.565] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:53.149] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:53.157] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T10:59:56.499] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.sendtype = false ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:56.506] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.sendtype = false
[2020-11-03T10:59:58.217] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T10:59:58.224] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:00:35.024] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:00:35.035] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:02:14.886] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T11:02:16.947] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '礼包'
[2020-11-03T11:02:31.026] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:02:31.375] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:02:31.712] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:02:32.225] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:02:32.551] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:02:32.867] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:03:12.366] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:03:12.377] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:03:13.163] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:03:13.501] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:03:13.850] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:03:18.119] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:04:09.056] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:04:09.127] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:04:09.240] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:04:09.703] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:04:20.244] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:04:24.023] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:04:28.001] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T11:04:28.008] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T11:04:28.020] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T11:04:28.926] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:04:29.012] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:04:29.093] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:04:29.847] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:05:02.012] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:05:02.062] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:05:02.434] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:18:35.755] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T11:18:35.767] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T11:18:35.783] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T11:18:36.821] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:18:37.125] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:18:37.212] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:18:38.293] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:18:38.303] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:18:41.016] [DEBUG] debugLogger - Executing (default): select count(id) from gm_white_user where smtp_id = '19' and status = '1'
[2020-11-03T11:18:41.022] [DEBUG] debugLogger - Executing (default): update  gm_white_smtp set  status = '0' where game_id = '1' and id ='19'
[2020-11-03T11:18:41.030] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件删除','白名单管理','删除了id为19白名单邮件。','1','长澜月','{"id":19,"gameid":"1"}')
[2020-11-03T11:18:41.350] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:18:41.358] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:18:43.131] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:18:43.466] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:18:43.807] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:18:44.126] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:18:45.004] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:24:13.085] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:24:13.466] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:24:13.854] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:24:16.639] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:24:51.829] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:24:52.183] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:24:52.522] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:24:53.419] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:28:47.832] [DEBUG] debugLogger - Executing (default): select cdkid from gm_cdk where game_id = 1 and type = '1'
[2020-11-03T11:28:48.113] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T11:28:48.480] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
		dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
	sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1'   limit 10 offset 0   ),
	pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
	pls as (select id,string_to_array(string_agg((case 
	when pla.plaform = '"1"' then '安卓'
	when pla.plaform = '"2"' then '苹果'
	end),','),',') as plaforms  from pla  GROUP BY pla.id)
	select  sda.*,pls.plaforms ,(case 
		when sda.type = '1' then '唯一'
		when sda.type = '2' then '互斥'
		when sda.type = '3' then '通用'
		end
		) as types  from sda left JOIN pls on pls.id=sda.id
[2020-11-03T11:28:48.490] [DEBUG] debugLogger - Executing (default): select count(id) as total  from gm_cdk cdk where cdk.game_id='1'
[2020-11-03T11:28:49.829] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:28:49.892] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:28:50.243] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:28:51.424] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:29:54.802] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:29:54.853] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:29:55.201] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:29:57.998] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:30:04.020] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:30:04.029] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:30:05.157] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T11:30:07.950] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T11:30:08.747] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '礼包'
[2020-11-03T11:30:11.189] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T11:30:11.617] [DEBUG] debugLogger - Executing (default): insert into gm_white_smtp 
		( create_user_id , game_id ,  title,text,sendtype ,cycle,annex)
		values 
		('79'  , '1','123','123',true,'month','[{"name":"5001","number":123}]')
		returning id
[2020-11-03T11:30:11.711] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件创建','白名单管理','创建了id为20白名单月度 周期 邮件。','1','长澜月','{"title":"123","text":"123","sendType":true,"cycle":"month","annex":[{"annexName":["礼包","5001"],"annexNumber":"123","id":0}],"gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T11:30:14.627] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:30:14.965] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:30:15.305] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:30:15.620] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:30:17.642] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:30:52.519] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:31:05.217] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:31:37.666] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:31:37.680] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:31:40.407] [DEBUG] debugLogger - Executing (default): select count(id) from gm_white_user where smtp_id = '20' and status = '1'
[2020-11-03T11:31:40.414] [DEBUG] debugLogger - Executing (default): update  gm_white_smtp set  status = '0' where game_id = '1' and id ='20'
[2020-11-03T11:31:40.425] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件删除','白名单管理','删除了id为20白名单邮件。','1','长澜月','{"id":20,"gameid":"1"}')
[2020-11-03T11:31:40.745] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:31:40.755] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:31:44.657] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:31:44.991] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:31:45.330] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:31:45.529] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:32:48.470] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:32:48.477] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T11:32:48.477] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:32:48.478] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.480] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.483] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:32:48.489] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.490] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.490] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.496] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.497] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T11:32:48.499] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.501] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T11:32:48.501] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:32:48.506] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.506] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.509] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.511] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.514] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.534] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.534] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.535] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.538] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.540] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.551] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.553] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:48.557] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:32:50.590] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T11:32:50.600] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T11:32:50.611] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T11:32:51.450] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:32:51.709] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:32:51.823] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:32:52.504] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:32:59.422] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:32:59.431] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:33:00.323] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T11:33:02.659] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T11:33:03.174] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '特殊道具'
[2020-11-03T11:33:05.513] [DEBUG] debugLogger - Executing (default): select title from gm_white_smtp where game_id ='1' and status = '1'
[2020-11-03T11:33:06.017] [DEBUG] debugLogger - Executing (default): insert into gm_white_smtp 
		( create_user_id , game_id ,  title,text,sendtype ,cycle,annex)
		values 
		('79'  , '1','123','123',true,'month','[{"name":"9001","number":12}]')
		returning id
[2020-11-03T11:33:06.115] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件创建','白名单管理','创建了id为21白名单月度 周期 邮件。','1','长澜月','{"title":"123","text":"123","sendType":true,"cycle":"month","annex":[{"annexName":["特殊道具","9001"],"annexNumber":"12","id":0}],"gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T11:34:24.104] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T11:34:27.397] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:27.407] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:27.930] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:27.936] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:28.251] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:28.258] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:28.574] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:28.581] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:29.111] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:29.123] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:29.442] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:29.449] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:29.764] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:29.771] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:30.084] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:30.091] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:34:57.152] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:34:57.162] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:35:59.260] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:35:59.598] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:35:59.935] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:36:00.105] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:39:59.701] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:40:00.043] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:40:00.380] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:40:00.929] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:40:09.890] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '123'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'周期',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T11:41:03.736] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:41:03.738] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T11:41:03.740] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:41:03.741] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.742] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.745] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:41:03.748] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.750] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.750] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.752] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.753] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T11:41:03.755] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.758] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T11:41:03.758] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.761] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.761] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.763] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.764] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.771] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.774] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.776] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.777] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.780] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.782] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.783] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:03.787] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:41:05.556] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '123'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'周期',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T11:44:29.744] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:44:29.752] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T11:44:29.754] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:44:29.755] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.755] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.760] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:44:29.763] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.769] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.769] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.769] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.772] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T11:44:29.772] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.774] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T11:44:29.777] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.778] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.782] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.782] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.784] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.790] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.794] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.797] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.798] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.799] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.802] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.803] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:29.807] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:44:43.381] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T11:44:43.388] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T11:44:43.398] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T11:44:44.222] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:44:44.329] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:44:44.430] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:44:47.568] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:44:47.652] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:44:48.009] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:44:48.890] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:44:57.066] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '123'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'周期',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T11:44:59.117] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"123","type":true,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T11:44:59.208] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:45:30.259] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T11:45:30.269] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T11:45:54.513] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:45:54.863] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T11:45:55.114] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T11:45:57.090] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T11:46:57.303] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:46:57.305] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-11-03T11:46:57.307] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:46:57.308] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.308] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.312] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-11-03T11:46:57.314] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.315] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.318] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.319] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.321] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-11-03T11:46:57.323] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.325] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-11-03T11:46:57.326] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.331] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.331] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.332] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.334] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.340] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.342] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.345] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.348] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.351] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.352] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.355] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:46:57.356] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-11-03T11:52:01.458] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T11:52:05.789] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604316838,"exp":1635874438,"ip":"127.0.0.1"}}')
[2020-11-03T11:52:05.867] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:01:38.091] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:01:38.320] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:01:40.469] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:01:40.477] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:01:40.489] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:01:41.009] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:01:41.254] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:01:41.326] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:01:42.589] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T12:01:52.862] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T12:01:55.252] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:01:55.354] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:02:00.277] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:02:00.283] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:02:01.064] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:02:01.071] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:09.715] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:09.952] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:10.297] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:11.070] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T12:04:21.673] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T12:04:24.162] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:04:24.237] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:30.088] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:30.096] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:32.595] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:32.602] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:33.070] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:33.076] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:33.324] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:33.333] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:33.391] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:33.400] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:34.946] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:35.296] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:35.547] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:41.542] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:04:41.553] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T12:04:48.808] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:48.817] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:49.231] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:49.238] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:04:50.379] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:50.633] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:04:50.726] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:04:53.530] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  and w.id = '18'::int  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:04:53.538] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'  and w.id = '18'::int
[2020-11-03T12:05:38.680] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:05:38.905] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:05:39.012] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:05:40.082] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T12:05:48.317] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T12:05:51.556] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:05:51.637] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:06:42.989] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:06:43.214] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:06:43.327] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:07:35.013] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(a,','),',') as "1", string_to_array(string_agg(b,','),',') as "2" from (select case when sendtype then string_agg(title ,',')  end  as a  ,1 as id , case when not  sendtype then string_agg(title ,',')  end  as b from gm_white_smtp where game_id = '1'  and status = '1'  GROUP BY sendtype) a GROUP BY id
[2020-11-03T12:07:44.361] [DEBUG] debugLogger - Executing (default): insert into gm_white_user (
			game_id,notebook,roleid,smtp_id,plaform,channel,roleids,type,servername,create_user_id
			)values(
			'1','','[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}]',(select id from  gm_white_smtp where title = '没什么问题'  and status = 1 and game_id = '1'),
			(select array_to_json(string_to_array(string_agg(plaform, ','), ',')) as plaform from (select * from (select jsonb_array_elements_text(plaform) as plaform  from (		select plaform ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
			) a ) a GROUP BY plaform)a ),
			(select array_to_json(string_to_array(string_agg(channel, ','), ',')) as channel from (select * from (select jsonb_array_elements_text(channel) as channel  from (		select channel ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb 
				) a ) a GROUP BY channel)a ),'[1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312]'
			,'单次',
			(
				select array_to_json(string_to_array(string_agg(servername, ','), ',')) as servername from (select * from (select servername  from (              select servername ,1 as id  from gm_server where  '[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58]'::jsonb @> serverid::varchar::jsonb
                        ) a ) a GROUP BY servername)a 
			),'79'
			) returning id
[2020-11-03T12:07:57.704] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单用户添加','白名单管理','添加了用户1231231,5456465,9681699,13906933,18132167,22357401,26582635,30807869,35033103,39258337,43483571,47708805,51934039,56159273,60384507,64609741,68834975,73060209,77285443,81510677,85735911,89961145,94186379,98411613,102636847,106862081,111087315,115312549,23,31,2312,123,1,12313,23,2321,31231,123,312,23,12,1212312313,23,23,23,12,31231,123,12312,12,31,123,31231,231,23,12,312,2312','1','长澜月','{"roleId":[{"serverid":1,"id":1231231},{"serverid":2,"id":5456465},{"serverid":3,"id":9681699},{"serverid":4,"id":13906933},{"serverid":5,"id":18132167},{"serverid":6,"id":22357401},{"serverid":7,"id":26582635},{"serverid":8,"id":30807869},{"serverid":9,"id":35033103},{"serverid":10,"id":39258337},{"serverid":11,"id":43483571},{"serverid":12,"id":47708805},{"serverid":13,"id":51934039},{"serverid":14,"id":56159273},{"serverid":15,"id":60384507},{"serverid":16,"id":64609741},{"serverid":17,"id":68834975},{"serverid":18,"id":73060209},{"serverid":19,"id":77285443},{"serverid":20,"id":81510677},{"serverid":21,"id":85735911},{"serverid":22,"id":89961145},{"serverid":23,"id":94186379},{"serverid":24,"id":98411613},{"serverid":25,"id":102636847},{"serverid":26,"id":106862081},{"serverid":27,"id":111087315},{"serverid":28,"id":115312549},{"serverid":29,"id":23},{"serverid":30,"id":31},{"serverid":31,"id":2312},{"serverid":32,"id":123},{"serverid":33,"id":1},{"serverid":34,"id":12313},{"serverid":35,"id":23},{"serverid":36,"id":2321},{"serverid":37,"id":31231},{"serverid":38,"id":123},{"serverid":39,"id":312},{"serverid":40,"id":23},{"serverid":41,"id":12},{"serverid":42,"id":1212312313},{"serverid":43,"id":23},{"serverid":44,"id":23},{"serverid":45,"id":23},{"serverid":46,"id":12},{"serverid":47,"id":31231},{"serverid":48,"id":123},{"serverid":49,"id":12312},{"serverid":50,"id":12},{"serverid":51,"id":31},{"serverid":52,"id":123},{"serverid":53,"id":31231},{"serverid":54,"id":231},{"serverid":55,"id":23},{"serverid":56,"id":12},{"serverid":57,"id":312},{"serverid":58,"id":2312}],"name":"没什么问题","type":false,"notebook":"","gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:07:57.752] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:08:01.487] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:08:01.506] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:08.841] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:08:08.857] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:12.068] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:08:12.159] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:16.455] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:08:16.794] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:18.900] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:08:18.943] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:19.151] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:08:19.631] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:08:19.650] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:08:20.602] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'  and smtp_id= '18' )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:11.618] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:11.640] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:13.096] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:13.110] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:13.349] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:13.637] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:13.653] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:13.671] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:14.561] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:16.048] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 10
[2020-11-03T12:09:16.078] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:16.281] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:17.318] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:17.353] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:18.919] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 40 offset 0
[2020-11-03T12:09:19.420] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:09:28.736] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:09:28.958] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T12:09:32.081] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:09:32.426] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:09:32.677] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:36.541] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:40.033] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:09:40.045] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:09:40.059] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:09:40.638] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:09:40.775] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:09:41.063] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:09:46.409] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:09:46.488] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:09:48.072] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:09:53.619] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:10:04.620] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:10:04.644] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:10:04.990] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:11:42.686] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:11:43.024] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:12:03.637] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:12:03.719] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:12:51.471] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:12:54.077] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:12:54.584] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:12:54.936] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:12:56.967] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:13:03.392] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:13:15.700] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:13:44.442] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:13:44.534] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:13:45.430] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:13:45.439] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:13:45.452] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:13:46.221] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:13:46.484] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:13:48.502] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:13:53.677] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:13:59.853] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:14:00.413] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:14:00.984] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:14:04.783] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:14:27.204] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:14:49.873] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:14:50.093] [DEBUG] debugLogger - Executing (default): insert into gm_client 
        (version_id,plaform,channel,is_show_type,game_id,create_user_id)
        values
        ('1','["1"]','["测试渠道二渠道"]','["测试","正式"]','1','79')
[2020-11-03T12:14:50.104] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','创建客户端','客户端管理','创建了区服版本号为1 的客户端 ','1','长澜月','{"versionId":"1","plaform":["1"],"channel":["测试渠道二渠道"],"showType":["测试","正式"],"gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:14:50.226] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:14:53.349] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:16:09.787] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:16:09.842] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:16:16.795] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:16:16.802] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T12:16:16.812] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T12:16:16.822] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T12:17:14.028] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:17:14.039] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:17:14.051] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:17:14.819] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:17:15.057] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T12:17:15.068] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T12:17:15.080] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T12:19:10.278] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:19:10.289] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:19:10.304] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:19:11.272] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:11.281] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T12:19:11.317] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T12:19:11.324] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T12:19:15.468] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:15.469] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T12:19:18.520] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:18.820] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T12:19:20.181] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:20.536] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T12:19:20.790] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T12:19:20.800] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T12:19:22.183] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:22.340] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-11-03T12:19:22.907] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-11-03T12:19:23.163] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T12:19:23.184] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T12:19:24.297] [DEBUG] debugLogger - Executing (default): select cdkid from gm_cdk where game_id = 1 and type = '1'
[2020-11-03T12:19:24.349] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:24.704] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
		dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
	sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1'   limit 10 offset 0   ),
	pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
	pls as (select id,string_to_array(string_agg((case 
	when pla.plaform = '"1"' then '安卓'
	when pla.plaform = '"2"' then '苹果'
	end),','),',') as plaforms  from pla  GROUP BY pla.id)
	select  sda.*,pls.plaforms ,(case 
		when sda.type = '1' then '唯一'
		when sda.type = '2' then '互斥'
		when sda.type = '3' then '通用'
		end
		) as types  from sda left JOIN pls on pls.id=sda.id
[2020-11-03T12:19:24.990] [DEBUG] debugLogger - Executing (default): select count(id) as total  from gm_cdk cdk where cdk.game_id='1'
[2020-11-03T12:19:25.174] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:26.786] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:19:27.127] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:19:27.380] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:19:28.046] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:19:28.053] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T12:19:33.592] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:19:33.671] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:19:36.137] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-11-03T12:19:38.044] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:19:38.050] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:19:38.059] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:19:38.070] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T12:19:38.929] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:19:38.939] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T12:19:40.530] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:19:40.532] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:19:40.538] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:19:40.541] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T12:19:41.366] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:19:41.373] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T12:19:42.754] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:19:42.765] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:19:43.053] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:19:43.060] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T12:20:16.610] [DEBUG] debugLogger - Executing (default): select id,username from auth_user where username = 'qweasdzx' 
		union 
		select  id,username from gm_user where username = 'qweasdzx'
[2020-11-03T12:20:27.751] [DEBUG] debugLogger - Executing (default): select id,username from auth_user where username = 'qweasdzx' 
		union 
		select  id,username from gm_user where username = 'qweasdzx'
[2020-11-03T12:20:28.997] [DEBUG] debugLogger - Executing (default): insert into auth_user 
        ( 
            username , password , alias , gameid
        )
        values
        (
            'qweasdzx' , md5(encode('123456','BASE64')) , '完美无暇' , '1'
        )
[2020-11-03T12:20:29.245] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T12:20:29.254] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T12:20:32.151] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:20:32.160] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:20:32.626] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:20:32.635] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:20:33.256] [DEBUG] debugLogger - Executing (default): with 
		qwe as (select * from gm_url),
		asd as (select name as label,id,(select json_agg(concat('{"id":"',id,'","label":"',name,'","meta":"',0,'"}')::jsonb) from qwe  where qwe.pid = d.id) as children from qwe as d where pid = 0 ORDER BY d.id)
		select *,'0' as meta from asd where id != 9999
[2020-11-03T12:20:52.329] [DEBUG] debugLogger - Executing (default): select * from gm_purview  where group_name = '仅仅次于管理员' and gid = '1'
[2020-11-03T12:20:52.553] [DEBUG] debugLogger - Executing (default): select * from gm_purview  where group_name = '仅仅次于管理员' and gid = '1'
[2020-11-03T12:20:53.497] [DEBUG] debugLogger - Executing (default): with qwe as (insert into gm_purview (gid , group_name)values('1' , '仅仅次于管理员') returning id),
		asd as (insert into gm_url_purview (purview_id,url_id,grede)values ((select * from qwe),2,0),((select * from qwe),1,0),((select * from qwe),4,0),((select * from qwe),5,0),((select * from qwe),6,0),((select * from qwe),7,0),((select * from qwe),3,0),((select * from qwe),9,0),((select * from qwe),8,0),((select * from qwe),11,0),((select * from qwe),10,0),((select * from qwe),13,0),((select * from qwe),12,0),((select * from qwe),15,0),((select * from qwe),14,0),((select * from qwe),17,0),((select * from qwe),23,0),((select * from qwe),16,0),((select * from qwe),19,0),((select * from qwe),20,0),((select * from qwe),27,0),((select * from qwe),18,0),((select * from qwe),29,0),((select * from qwe),28,0)) select * from qwe
[2020-11-03T12:20:53.846] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:20:53.857] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:20:55.425] [DEBUG] debugLogger - Executing (default): with 
		qwe as (select * from gm_url),
		asd as (select name as label,id,(select json_agg(concat('{"id":"',id,'","label":"',name,'","meta":"',0,'"}')::jsonb) from qwe  where qwe.pid = d.id) as children from qwe as d where pid = 0 ORDER BY d.id)
		select *,'0' as meta from asd where id != 9999
[2020-11-03T12:21:02.807] [DEBUG] debugLogger - Executing (default): select * from gm_purview  where group_name = '全部只可见' and gid = '1'
[2020-11-03T12:21:03.057] [DEBUG] debugLogger - Executing (default): select * from gm_purview  where group_name = '全部只可见' and gid = '1'
[2020-11-03T12:21:05.218] [DEBUG] debugLogger - Executing (default): with qwe as (insert into gm_purview (gid , group_name)values('1' , '全部只可见') returning id),
		asd as (insert into gm_url_purview (purview_id,url_id,grede)values ((select * from qwe),2,0),((select * from qwe),1,0),((select * from qwe),4,0),((select * from qwe),5,0),((select * from qwe),6,0),((select * from qwe),7,0),((select * from qwe),3,0),((select * from qwe),9,0),((select * from qwe),8,0),((select * from qwe),11,0),((select * from qwe),10,0),((select * from qwe),13,0),((select * from qwe),12,0),((select * from qwe),15,0),((select * from qwe),14,0),((select * from qwe),17,0),((select * from qwe),23,0),((select * from qwe),16,0),((select * from qwe),19,0),((select * from qwe),20,0),((select * from qwe),27,0),((select * from qwe),18,0),((select * from qwe),29,0),((select * from qwe),28,0)) select * from qwe
[2020-11-03T12:21:05.578] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T12:21:05.591] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T12:26:02.501] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:26:02.724] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:26:02.874] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:26:05.823] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:26:05.833] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T12:26:07.167] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T12:26:08.628] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '特殊道具'
[2020-11-03T12:26:11.903] [DEBUG] debugLogger - Executing (default): update gm_white_smtp set annex = '[{"name":"9001","number":1}]' where id ='21'::int and game_id = '1'
[2020-11-03T12:26:11.917] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','白名单邮件修改','白名单管理','修改了id为21白名单邮件。','1','长澜月','{"id":21,"title":"123","text":"123","annex":[{"annexName":["特殊道具","9001"],"annexNumber":"1","id":0}],"gameid":"1"}')
[2020-11-03T12:26:12.038] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-11-03T12:26:12.049] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-11-03T12:26:17.308] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:26:17.323] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:26:51.684] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:26:51.705] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:32:45.315] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:32:45.335] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:32:46.654] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:32:46.663] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:32:46.678] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:32:46.911] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:32:46.929] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:32:48.047] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:32:48.314] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:32:48.812] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select qwe.roleid as recoreroleid,qwe.sendtime as sendtime,qwe.serverid,asd.* from asd join qwe on asd.id::varchar = qwe.white_user_id ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:32:48.851] [DEBUG] debugLogger - Executing (default): with qwe as (select roleid,serverid,white_user_id,sendtime from gm_white_recording  ),
		asd as (select * from gm_white_user where id::varchar in (select white_user_id from qwe) and game_id = '1'   )
		select count(*) from asd join qwe on asd.id::varchar = qwe.white_user_id
[2020-11-03T12:32:51.064] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:32:51.410] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:32:51.874] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:32:52.693] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:32:52.943] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:17.915] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:33:18.150] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:33:18.268] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:26.027] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:33:26.444] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:33:26.690] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:30.096] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:33:30.107] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:33:30.121] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:33:30.674] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:33:31.132] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:33:31.384] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:42.422] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and channel =  '["测试渠道二渠道"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and channel =  '["测试渠道二渠道"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:43.414] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:45.087] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:45.894] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'   and is_show_type @> '["测试","正式"]'  and  jsonb_array_length(is_show_type) = jsonb_array_length('["测试","正式"]'::jsonb)) as total  from gm_client  where game_id = '1' and status ='1'   and is_show_type @> '["测试","正式"]'  and  jsonb_array_length(is_show_type) = jsonb_array_length('["测试","正式"]'::jsonb) ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:46.730] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:46.982] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:48.201] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and plaform =  '["1"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and plaform =  '["1"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:49.526] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'   and plaform @> '["1","2"]'  and  jsonb_array_length(plaform) = jsonb_array_length('["1","2"]'::jsonb)) as total  from gm_client  where game_id = '1' and status ='1'   and plaform @> '["1","2"]'  and  jsonb_array_length(plaform) = jsonb_array_length('["1","2"]'::jsonb) ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:49.997] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and plaform =  '["2"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and plaform =  '["2"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:51.167] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:33:55.475] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:34:02.744] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg( version_id  , ','),',')  as  versionId from (select version_id,1 as id  from gm_client  where game_id = '1' and status ='1' GROUP BY version_id )a GROUP BY id
[2020-11-03T12:34:02.996] [DEBUG] debugLogger - Executing (default): insert into gm_client 
        (version_id,plaform,channel,is_show_type,game_id,create_user_id)
        values
        ('2','["1"]','["测试渠道二渠道","fancyguo"]','["正式","测试"]','1','79')
[2020-11-03T12:34:03.005] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','创建客户端','客户端管理','创建了区服版本号为2 的客户端 ','1','长澜月','{"versionId":"2","plaform":["1"],"channel":["测试渠道二渠道","fancyguo"],"showType":["正式","测试"],"gameid":"1","user":{"id":79,"status":1,"create_user_id":null,"update_user_id":null,"create_time":"2019-07-17T06:07:57.000Z","update_time":"2020-09-17T03:28:36.234Z","username":"zhangzongchu","password":null,"nick_name":"张宗楚","avatar":"https://wework.qpic.cn/wwhead/nMl9ssowtibVGyrmvBiaibzDlNMxxiaWGSjSGG4UzOOS2TrAXp5ro1zfqCFPjykaf4PxcE0cSjRwRWA/100","email":"zhangzongchu@fancyguo.cn","source":2,"alias":"长澜月","phone":"13166882400","wechat_user_id":"YeHuaiChu","loginType":false,"iat":1604299563,"exp":1635857163,"ip":"127.0.0.1"}}')
[2020-11-03T12:34:03.093] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T12:34:03.352] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T12:34:06.220] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:34:06.519] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T12:44:54.820] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-11-03T12:44:55.620] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-11-03T12:44:55.660] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T12:44:55.668] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T12:44:55.681] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T12:45:04.895] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:45:04.951] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-11-03T12:45:05.009] [DEBUG] debugLogger - Executing (default): select *,(select count(*) from  gm_white_user where game_id = '1' and status = '1'  ) as total , 
		(select array_to_json(string_to_array(string_agg(plaform,','),','))from(  select case when  value = '1' then '安卓' when  value = '2' then '苹果' end as plaform   ,1 as id from jsonb_array_elements_text(plaform) a   )a  group by id 
)  as plaforms
			from gm_white_user where game_id = '1' and status = '1'  ORDER BY create_time desc limit 10 offset 0
[2020-11-03T12:45:08.349] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T12:45:08.409] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T12:45:08.474] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T12:45:08.483] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T14:36:08.820] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T14:36:08.832] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T14:52:47.303] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T14:52:47.309] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T14:52:47.320] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T14:52:47.327] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T14:52:49.941] [DEBUG] debugLogger - Executing (default): select * from gm_server  where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T14:52:49.949] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T14:52:49.956] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where test='1' and gameid='1'and test='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T14:52:50.782] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T14:52:50.789] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T14:52:50.796] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T14:52:51.681] [DEBUG] debugLogger - Executing (default): select * from gm_server  where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T14:52:51.688] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T14:52:51.693] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where test='1' and gameid='1'and test='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T15:15:56.584] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T15:15:56.593] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T15:15:57.214] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T15:15:57.224] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T15:41:23.994] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T15:41:23.997] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T15:41:24.011] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T15:41:24.018] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T15:41:24.881] [DEBUG] debugLogger - Executing (default): select * from gm_server  where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T15:41:24.888] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where test='1' and gameid='1'and test='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T15:41:24.894] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where test='1' and gameid='1'and test='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T15:59:25.686] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T15:59:25.694] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T15:59:25.705] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T15:59:25.989] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T15:59:25.996] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T15:59:26.005] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T15:59:26.013] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:32:18.833] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-11-03T16:32:18.842] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T16:32:18.854] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T16:32:19.159] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T16:32:19.295] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:32:19.337] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:32:19.346] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:41:27.233] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = 'KOG测试' limit 1
[2020-11-03T16:41:27.242] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '13' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T16:41:27.260] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T16:41:29.239] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '13' and status = '1'
[2020-11-03T16:41:29.540] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:41:29.547] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:41:29.552] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:41:36.058] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:42:07.516] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:42:09.963] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','测试','13','s2.mrhx.38ejed.com','0','127.0.0.1:24024','1','Tue, 10 Nov 2020 16:41:44 GMT','["测试渠道"]','["1"]','127.0.0.1','24024'
		) RETURNING id
[2020-11-03T16:42:09.970] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:42:09.977] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-11-03T16:42:09.983] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:42:09.989] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:43:11.766] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:43:14.396] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:43:14.797] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:43:16.080] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:43:16.089] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:43:16.094] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:43:16.383] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','测试a','13','s2.mrhx.38ejed.com','0','127.0.0.1:24024','1','Tue, 10 Nov 2020 16:41:44 GMT','["测试渠道"]','["1"]','127.0.0.1','24024'
		) RETURNING id
[2020-11-03T16:43:16.390] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-11-03T16:43:48.303] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:43:48.531] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='13' and status = 1
[2020-11-03T16:43:49.619] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:43:49.627] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:43:49.633] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T16:43:49.924] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','测试b','13','s2.mrhx.38ejed.com','0','127.0.0.1:24024','1','Tue, 10 Nov 2020 16:41:44 GMT','["测试渠道"]','["1"]','127.0.0.1','24024'
		) RETURNING id
[2020-11-03T16:43:49.932] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-11-03T16:43:49.972] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','创建区服','区服管理','创建了区服ID为 63 的区服 ','13','长澜月','{"serverid":"","servername":"测试b","plaform":["1"],"channel":["测试渠道"],"ip":"127.0.0.1:24024","display":"1","srttime":"2020-11-10T08:41:44.615Z","address":"s2.mrhx.38ejed.com","test":"0","page":1,"pagesize":20,"gameid":"13"}')
[2020-11-03T16:43:50.363] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T16:43:50.369] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T16:43:50.375] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T17:48:21.569] [DEBUG] debugLogger - Executing (default): update gm_server set display = '2' where  gameid='13' and serverid='61' returning *
[2020-11-03T17:48:21.585] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','','区服修改','区服管理','修改了区服id 61 状态为 繁忙','13','长澜月','{"id":61,"status":1,"create_user_id":79,"update_user_id":null,"create_time":"2020-11-03T08:42:07.861Z","update_time":"2020-11-03T08:42:07.861Z","servername":"测试","ip_port":"127.0.0.1:24024","address":"s2.mrhx.38ejed.com","plaform":["1"],"display":"2","srttime":"2020-11-10T08:41:44.000Z","gamename":"","pid":null,"serverid":"61","test":"0","load":null,"gameid":"13","childrens":null,"port":"24024","ip":"127.0.0.1","channel":["测试渠道"],"showstatusIsShow":false,"index":0}')
[2020-11-03T17:48:21.794] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T17:48:21.803] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='13'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T17:48:21.810] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='13'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T17:48:25.773] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'   and a.game_name = '空翼冒险团' limit 1
[2020-11-03T17:48:25.784] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1  and a.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-11-03T17:48:25.797] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select  DISTINCT game_name,b.id from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1'  ORDER BY id 
		) a
[2020-11-03T17:48:27.635] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:48:27.641] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T17:48:27.659] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T17:48:27.666] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T17:48:33.413] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:48:33.481] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T17:48:48.870] [DEBUG] debugLogger - Executing (default): select * from gm_character where gameid='1' and "serverid" in ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58')
[2020-11-03T17:48:48.878] [DEBUG] debugLogger - Executing (default): select * from gm_character where gameid='1' and "serverid" in ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58')
[2020-11-03T17:49:05.921] [DEBUG] debugLogger - Executing (default): select * from gm_character where gameid='1' and "serverid" in ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58')
[2020-11-03T17:49:26.973] [DEBUG] debugLogger - Executing (default): select * from gm_character where gameid='1' and "serverid" in ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58')
[2020-11-03T17:49:32.700] [DEBUG] debugLogger - Executing (default): select token,tablename from gm_game_token where gameid = '1' and type='user'
[2020-11-03T17:49:33.267] [DEBUG] debugLogger - Executing (default): select * from gm_character  where gameid='1' and roleid in ('1') offset 0 limit 10
[2020-11-03T17:49:35.271] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:49:35.338] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T17:49:49.512] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:49:49.559] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T17:49:49.908] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T17:49:49.918] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T17:49:50.158] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T17:49:50.168] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T17:49:50.243] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T17:49:50.251] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T17:53:57.936] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:53:57.992] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-11-03T17:53:58.044] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-11-03T17:53:58.534] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:53:58.551] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:53:58.981] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:53:58.997] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:53:59.477] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:53:59.497] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:54:04.871] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and   id= '67'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:04.882] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'  and   id= '67' and status = 1
[2020-11-03T17:54:07.090] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["测试渠道四渠道"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:07.100] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["测试渠道四渠道"]'  and status = 1
[2020-11-03T17:54:08.208] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道三渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道三渠道"]'::jsonb)   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:08.218] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道三渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道三渠道"]'::jsonb)  and status = 1
[2020-11-03T17:54:08.462] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道三渠道","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道三渠道","测试渠道二渠道"]'::jsonb)   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:08.470] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道三渠道","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道三渠道","测试渠道二渠道"]'::jsonb)  and status = 1
[2020-11-03T17:54:08.919] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道二渠道"]'::jsonb)   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:08.928] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and channel @> '["测试渠道四渠道","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道四渠道","测试渠道二渠道"]'::jsonb)  and status = 1
[2020-11-03T17:54:09.647] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["测试渠道二渠道"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:09.656] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["测试渠道二渠道"]'  and status = 1
[2020-11-03T17:54:10.450] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:10.464] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:54:13.780] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["测试渠道二渠道"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:13.788] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["测试渠道二渠道"]'  and status = 1
[2020-11-03T17:54:14.871] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:14.887] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:54:18.942] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["测试渠道二渠道"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:18.950] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["测试渠道二渠道"]'  and status = 1
[2020-11-03T17:54:19.390] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and channel @> '["测试渠道二渠道","测试渠道五渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道二渠道","测试渠道五渠道"]'::jsonb)   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:19.398] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and channel @> '["测试渠道二渠道","测试渠道五渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["测试渠道二渠道","测试渠道五渠道"]'::jsonb)  and status = 1
[2020-11-03T17:54:20.345] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["测试渠道二渠道"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:20.354] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["测试渠道二渠道"]'  and status = 1
[2020-11-03T17:54:20.889] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T17:54:20.907] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T17:56:13.315] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T17:56:13.325] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T17:56:13.444] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T17:56:13.452] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T17:56:14.016] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-11-03T17:56:15.370] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T17:56:15.377] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-11-03T17:56:16.086] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value  from gm_logs   where  game_id = $gameid$1$gameid$ GROUP BY classification
[2020-11-03T17:56:16.426] [DEBUG] debugLogger - Executing (default): select * , (nick_name || "alias" ) as  usernames from gm_logs  where game_id= $$1$$ and classification = $classification$邮件管理$classification$  ORDER BY  operating_time  desc  limit 100 OFFSET 0
[2020-11-03T17:56:16.438] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_logs  where game_id= $$1$$ and classification = $classification$邮件管理$classification$
[2020-11-03T17:56:18.207] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-11-03T17:56:18.216] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-11-03T17:56:18.511] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-11-03T17:56:18.517] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-11-03T17:56:22.620] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T17:56:22.712] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-11-03T17:56:23.062] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:26.770] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and channel =  '["fancyguo"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and channel =  '["fancyguo"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:28.111] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'   and channel @> '["fancyguo","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["fancyguo","测试渠道二渠道"]'::jsonb)) as total  from gm_client  where game_id = '1' and status ='1'   and channel @> '["fancyguo","测试渠道二渠道"]'  and  jsonb_array_length(channel) = jsonb_array_length('["fancyguo","测试渠道二渠道"]'::jsonb) ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:28.663] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and channel =  '["测试渠道二渠道"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and channel =  '["测试渠道二渠道"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:30.410] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:31.252] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:32.303] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'   and is_show_type @> '["测试","正式"]'  and  jsonb_array_length(is_show_type) = jsonb_array_length('["测试","正式"]'::jsonb)) as total  from gm_client  where game_id = '1' and status ='1'   and is_show_type @> '["测试","正式"]'  and  jsonb_array_length(is_show_type) = jsonb_array_length('["测试","正式"]'::jsonb) ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:33.274] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and is_show_type =  '["测试"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:33.511] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:34.414] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and plaform =  '["1"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and plaform =  '["1"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:35.739] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:36.790] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and plaform =  '["2"]' ) as total  from gm_client  where game_id = '1' and status ='1'  and plaform =  '["2"]'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:37.607] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:38.513] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:38.996] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T17:56:40.192] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1'  and version_id = '1' ) as total  from gm_client  where game_id = '1' and status ='1'  and version_id = '1'  ORDER BY id desc limit 10 offset 0
[2020-11-03T18:33:46.318] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:33:46.329] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T18:33:46.338] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T18:33:46.345] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T18:37:07.201] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:07.203] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T18:37:09.516] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:09.769] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T18:37:09.854] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T18:37:09.863] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T18:37:12.798] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:13.138] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-11-03T18:37:13.389] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-11-03T18:37:13.550] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T18:37:13.570] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T18:37:14.026] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-11-03T18:37:14.103] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-11-03T18:37:14.274] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T18:37:29.815] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:30.050] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-11-03T18:37:30.222] [DEBUG] debugLogger - Executing (default): with qwe as (	select id ,(case when plaforms = '1'::text then '安卓' when plaforms = '2'::text then '苹果' end ) as plaforms  from gm_announcement,jsonb_array_elements_text(plaform)  with  ordinality  arr(plaforms, index)),
            asd as (select id,status,end_time,start_time,anno_status,title,game_id,text,time_interval,img_url,weights,link,job_id,sendtime,
					(case when type::int = 1 then start_time else sendtime end) as stime ,
					(case when type::int = 1 then end_time else endtime end) as etime ,
					(case when type::int = 1 then '跑马灯' when type::int = 2 then '公告板' end ) as type,
					( case when cardinality(	array_remove(client,'')) = 0 then null else client end ) as client ,
					( case when cardinality(	array_remove(servername,'')) = 0 then null else servername end ) as servername 
					from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )  
					order by id  offset 0 limit 10),
			zxc as (select id,string_to_array(string_agg(plaforms, ','), ',')as plaforms from qwe  GROUP BY id )
			select asd.*,zxc.plaforms from  asd left join zxc  on asd.id=zxc.id
[2020-11-03T18:37:30.234] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1  and (anno_status::int  not in (1,3)  or anno_status    is null )
[2020-11-03T18:37:33.127] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:33.471] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-11-03T18:37:33.721] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-11-03T18:37:33.908] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T18:37:33.924] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T18:37:34.404] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-11-03T18:37:34.412] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-11-03T18:37:34.579] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T18:37:47.581] [DEBUG] debugLogger - Executing (default): select cdkid from gm_cdk where game_id = 1 and type = '1'
[2020-11-03T18:37:47.587] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:47.941] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
		dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
	sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1'   limit 10 offset 0   ),
	pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
	pls as (select id,string_to_array(string_agg((case 
	when pla.plaform = '"1"' then '安卓'
	when pla.plaform = '"2"' then '苹果'
	end),','),',') as plaforms  from pla  GROUP BY pla.id)
	select  sda.*,pls.plaforms ,(case 
		when sda.type = '1' then '唯一'
		when sda.type = '2' then '互斥'
		when sda.type = '3' then '通用'
		end
		) as types  from sda left JOIN pls on pls.id=sda.id
[2020-11-03T18:37:48.161] [DEBUG] debugLogger - Executing (default): select count(id) as total  from gm_cdk cdk where cdk.game_id='1'
[2020-11-03T18:37:48.590] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T18:37:48.897] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-11-03T18:37:51.316] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:53.661] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:37:53.912] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-11-03T18:37:53.996] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-11-03T18:37:54.253] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-11-03T18:37:54.386] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-11-03T18:37:54.459] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-11-03T18:37:55.619] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-11-03T18:37:56.434] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-11-03T18:48:41.111] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:48:41.115] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T18:48:41.126] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T18:48:41.135] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T18:52:35.164] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T18:52:35.173] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T18:52:35.180] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T18:52:35.385] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T18:52:35.394] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T18:52:35.400] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T18:52:35.498] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-11-03T18:52:35.506] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and status = 1 and (pid is null or  trim(pid) ='')
[2020-11-03T18:52:35.512] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-11-03T18:52:43.211] [DEBUG] debugLogger - Executing (default): select cdkid from gm_cdk where game_id = 1 and type = '1'
[2020-11-03T18:52:43.276] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:52:43.462] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
		dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
	sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1'   limit 10 offset 0   ),
	pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
	pls as (select id,string_to_array(string_agg((case 
	when pla.plaform = '"1"' then '安卓'
	when pla.plaform = '"2"' then '苹果'
	end),','),',') as plaforms  from pla  GROUP BY pla.id)
	select  sda.*,pls.plaforms ,(case 
		when sda.type = '1' then '唯一'
		when sda.type = '2' then '互斥'
		when sda.type = '3' then '通用'
		end
		) as types  from sda left JOIN pls on pls.id=sda.id
[2020-11-03T18:52:43.475] [DEBUG] debugLogger - Executing (default): select count(id) as total  from gm_cdk cdk where cdk.game_id='1'
[2020-11-03T18:52:45.002] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-11-03T18:52:45.350] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
				dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
			sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1' and cdk.id=131 ),
			pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
			pls as (select id,string_to_array(string_agg((case 
			when pla.plaform = '"1"' then '安卓'
			when pla.plaform = '"2"' then '苹果'
			end),','),',') as plaforms  from pla  GROUP BY pla.id)
			select  sda.*,pls.plaforms ,(case 
				when sda.type = '1' then '唯一'
				when sda.type = '2' then '互斥'
				when sda.type = '3' then '通用'
				end
				) as types from sda left JOIN pls on pls.id=sda.id
[2020-11-03T18:52:47.385] [DEBUG] debugLogger - Executing (default): with asd as (select (jsonb_array_elements(annex) ->> 'annexName')::jsonb ->> 1  as name, jsonb_array_elements(annex) ->> 'annexNumber' as numbers ,id  from  gm_cdk),
				dsa as (select  asd.id, string_to_array(string_agg(concat(art.name,'  ',asd.numbers,'个'),','),',')  as annexs  from asd  left join gm_article art on art.article_id = asd.name GROUP BY asd.id ),
			sda as (select cdk.*,dsa.annexs   from dsa left join  gm_cdk cdk on dsa.id = cdk.id where cdk.game_id='1' and cdk.id=131 ),
			pla as (select  jsonb_array_elements(plaform) as plaform ,id from gm_cdk  where id in (select id from sda)),
			pls as (select id,string_to_array(string_agg((case 
			when pla.plaform = '"1"' then '安卓'
			when pla.plaform = '"2"' then '苹果'
			end),','),',') as plaforms  from pla  GROUP BY pla.id)
			select  sda.*,pls.plaforms ,(case 
				when sda.type = '1' then '唯一'
				when sda.type = '2' then '互斥'
				when sda.type = '3' then '通用'
				end
				) as types from sda left JOIN pls on pls.id=sda.id
