[2020-10-15T10:55:52.822] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:55:52.827] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T10:55:52.828] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:55:52.831] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.833] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.836] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:55:52.836] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.836] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.838] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.840] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.842] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T10:55:52.843] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.845] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T10:55:52.847] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.850] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.852] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.854] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.855] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.863] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.865] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.867] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.871] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.874] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.876] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.877] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:55:52.878] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.219] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:56:57.232] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T10:56:57.236] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:56:57.236] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.237] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.241] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T10:56:57.244] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.248] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.253] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.253] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.259] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T10:56:57.262] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.266] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T10:56:57.271] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.272] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.275] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.280] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.283] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.296] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.313] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.320] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.320] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.321] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.325] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.327] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T10:56:57.334] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T11:02:55.971] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-15T11:02:56.080] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-15T11:02:56.196] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T11:02:56.205] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T11:02:56.217] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T11:03:02.679] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T11:03:03.610] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T11:03:03.620] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T11:03:03.629] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T11:03:03.638] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T11:03:07.498] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T11:03:07.499] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'  and id ='25'  and group_name is not null  ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select * from asdf a right join qwe b on a.id=b.id
[2020-10-15T11:03:07.514] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'  and id = '25' and group_name is not null),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select b.* from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select b.* from asd a join gm_user b on b.id = a.uid::int)
		select id,username,alias,'外部用户' as type from zxc 
		union
		select id,username,alias,'青果用户' as type  from zxcv
[2020-10-15T11:03:07.515] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T11:03:10.918] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T11:03:10.927] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T11:03:11.223] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'  and id ='27'  and group_name is not null  ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select * from asdf a right join qwe b on a.id=b.id
[2020-10-15T11:03:11.231] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'  and id = '27' and group_name is not null),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select b.* from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select b.* from asd a join gm_user b on b.id = a.uid::int)
		select id,username,alias,'外部用户' as type from zxc 
		union
		select id,username,alias,'青果用户' as type  from zxcv
[2020-10-15T11:03:14.095] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T11:03:14.105] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T11:03:29.658] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T11:03:29.932] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T11:03:29.939] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T11:03:29.944] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T11:03:41.347] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T11:03:41.356] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T14:10:58.267] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-15T14:10:58.685] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-15T14:10:58.811] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:10:58.818] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:10:58.831] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:11:01.065] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:11:55.480] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T14:11:55.490] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T14:11:55.752] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:11:55.759] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T14:11:56.519] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:12:03.018] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T14:12:03.028] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T14:12:03.321] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:12:03.328] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T14:12:04.021] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:18:15.578] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:18:15.587] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:18:15.600] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:18:15.799] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:19:44.176] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:20:19.359] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:20:19.366] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:20:19.376] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:20:19.506] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:22:22.028] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:22:22.239] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:22:22.248] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:22:22.470] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:22:44.556] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:22:44.563] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:22:44.573] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:22:44.705] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:23:29.354] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:25:01.743] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:25:10.054] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:25:10.064] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:25:10.087] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:25:10.387] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:26:26.342] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:28:14.059] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:28:40.809] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T14:28:40.816] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:28:40.818] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T14:28:40.825] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T14:28:41.851] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:48:50.025] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:49:23.138] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:49:44.729] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:49:52.829] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:51:47.618] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:52:05.908] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T14:52:05.917] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T14:52:05.930] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T14:52:06.228] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:57:27.227] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T14:58:59.093] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:58:59.104] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T14:59:51.711] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:59:51.720] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T14:59:59.296] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T14:59:59.304] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:00:03.321] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:00:03.339] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:00:39.562] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:00:39.570] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:01:46.645] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:01:46.857] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:03:35.200] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:03:35.210] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:03:41.861] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='123123123123qwe'  else channel_id::varchar = '123123123123qwe' end
[2020-10-15T15:03:42.250] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='123123123123qwe'  else channel_id::varchar = '123123123123qwe' end
[2020-10-15T15:03:47.946] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:03:48.173] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:11:59.801] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:11:59.803] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:11:59.805] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:11:59.805] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.806] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.809] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:11:59.810] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.813] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.813] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.813] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.815] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:11:59.818] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.821] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:11:59.821] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.821] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.823] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.827] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.833] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.834] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.836] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.839] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.840] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.842] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.848] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:11:59.855] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:00.022] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.457] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:12:13.462] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:12:13.463] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:12:13.467] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.468] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.470] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:12:13.471] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.473] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.475] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.477] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.478] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:12:13.480] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.482] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:12:13.483] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.486] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.487] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.490] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.496] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.498] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.500] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.505] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.508] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.508] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.514] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.516] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:13.517] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:12:38.883] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:12:38.891] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:12:53.907] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='终极王者测试'  else channel_id::varchar = '终极王者测试' end
[2020-10-15T15:12:54.228] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='终极王者测试'  else channel_id::varchar = '终极王者测试' end
[2020-10-15T15:12:55.685] [DEBUG] debugLogger - Executing (default): with qwe as (select * from gm_game_channel where id = '10' and gameid = '1' limit 1 ),
			asd as (update gm_game_channel set channel = '终极王者测试' , channel_id = '123123' where id = '10' and gameid = '1' returning *)
			select channelChangePut('终极王者测试',(select channel from qwe limit 1 ),'1'::int)
[2020-10-15T15:12:56.034] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:12:56.041] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:12:57.696] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:12:57.703] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:13:40.591] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when false then  channel ='6'  else channel_id::varchar = '6' end
[2020-10-15T15:13:42.450] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='测试'  else channel_id::varchar = '测试' end
[2020-10-15T15:13:43.064] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when false then  channel ='6'  else channel_id::varchar = '6' end
[2020-10-15T15:13:43.400] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='测试'  else channel_id::varchar = '测试' end
[2020-10-15T15:13:44.483] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when false then  channel ='6'  else channel_id::varchar = '6' end
[2020-10-15T15:13:44.785] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='测试'  else channel_id::varchar = '测试' end
[2020-10-15T15:13:46.063] [DEBUG] debugLogger - Executing (default): insert into gm_game_channel (channel,channel_id,gameid)values('测试','6','1')
[2020-10-15T15:13:46.310] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:13:46.319] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:13:52.119] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='测试'   order by id limit 10 offset 0
[2020-10-15T15:13:52.128] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='测试'
[2020-10-15T15:13:53.691] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:13:53.699] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:13:56.011] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='修改渠道测试'   order by id limit 10 offset 0
[2020-10-15T15:13:56.700] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='修改渠道测试'
[2020-10-15T15:13:57.436] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='修改渠道测试'   order by id limit 10 offset 0
[2020-10-15T15:13:57.444] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'   and channel  ='修改渠道测试'
[2020-10-15T15:13:58.429] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:13:58.437] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:13:58.914] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:13:58.922] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:21:02.072] [DEBUG] debugLogger - Executing (default): update gm_game_channel set status = '0' where id = '13' and gameid='1'
[2020-10-15T15:21:02.308] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:21:02.316] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:22:28.740] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:22:28.743] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:22:28.743] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:22:28.746] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.748] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.748] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:22:28.750] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.751] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.752] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.753] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.755] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:22:28.756] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.758] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:22:28.759] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.760] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.762] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.762] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.764] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.771] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.773] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.776] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.781] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.783] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.785] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.787] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:28.789] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:22:38.381] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:22:38.389] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:22:38.615] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:22:38.622] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:22:40.450] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:22:40.458] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:28.671] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:24:28.673] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:24:28.681] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:24:28.683] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.683] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.684] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:24:28.686] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.687] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.688] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.690] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.692] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:24:28.692] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.694] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:24:28.695] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.698] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.698] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.700] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.700] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.709] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.713] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.715] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.716] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.718] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.720] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.720] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:28.722] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:24:29.762] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:29.904] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:29.913] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:32.610] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"久游"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{久游}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"久游"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"久游"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"久游"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"久游"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:32.973] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:32.979] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:35.276] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"小米"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{小米}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"小米"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"小米"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:35.635] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:35.642] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:38.005] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"小米"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{小米}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"小米"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"小米"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:38.397] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:38.403] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:40.259] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:40.619] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:40.628] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:24:43.574] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"修改渠道测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{修改渠道测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"修改渠道测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:24:43.937] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:24:43.943] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:25:18.490] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:18.491] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:25:18.493] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:18.495] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.497] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.499] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:18.499] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.501] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.503] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.503] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.504] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:25:18.506] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.508] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:25:18.509] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.510] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.511] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.512] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.514] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.520] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.524] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.527] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.528] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.531] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.532] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.534] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:18.538] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:21.359] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:25:21.740] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:25:21.750] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:25:26.929] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:25:27.261] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:25:27.269] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:25:54.285] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:54.286] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:25:54.288] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:54.288] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.291] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.293] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:25:54.294] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.296] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.296] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.298] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.299] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:25:54.300] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.301] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:25:54.303] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.305] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.305] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.307] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.308] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.313] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.315] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.318] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.322] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.323] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.327] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.329] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:25:54.330] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:43:04.464] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T15:43:04.475] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T15:43:04.487] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T15:43:04.493] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T15:43:17.239] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T15:43:17.241] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:43:17.251] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T15:43:17.251] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T15:43:19.464] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:43:19.471] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:44:57.629] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:44:57.631] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:44:57.633] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:44:57.636] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.638] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.638] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:44:57.640] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.641] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.642] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.643] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.645] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:44:57.646] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.647] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:44:57.649] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.650] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.651] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.653] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.654] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.661] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.663] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.665] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.668] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.675] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.675] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.679] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:44:57.679] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.785] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:10.787] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:45:10.788] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:10.788] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.792] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.792] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:10.794] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.795] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.796] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.798] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.800] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:45:10.801] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.803] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:45:10.805] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.805] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.807] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.808] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.809] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.820] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.823] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.827] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.829] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.834] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.835] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.837] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:10.843] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.635] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:21.638] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:45:21.638] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:21.640] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.642] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.644] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:45:21.646] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.647] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.648] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.650] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.651] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:45:21.653] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.654] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:45:21.656] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.658] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.658] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.660] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.661] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.667] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.669] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.672] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.678] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.679] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.682] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.683] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:21.684] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:45:41.868] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:45:41.882] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:45:46.059] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:45:46.485] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:45:46.491] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:45:48.298] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"修改渠道测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{修改渠道测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"修改渠道测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:45:48.634] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:45:48.641] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:45:51.120] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:45:51.453] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:45:51.686] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:46:07.056] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:46:07.063] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:46:25.428] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:46:25.441] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:46:28.320] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:46:45.714] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:46:45.722] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:46:48.224] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T15:46:48.233] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T15:46:48.243] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T15:46:48.514] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:46:48.526] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:46:50.677] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:46:59.404] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:46:59.414] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:47:00.309] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T15:47:00.317] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T15:47:00.372] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T15:47:00.635] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:47:00.641] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:47:02.514] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:47:05.443] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:47:05.450] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:47:16.639] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:47:16.784] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:47:16.792] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:47:54.128] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:47:54.131] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:47:54.131] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:47:54.135] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.137] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.137] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:47:54.139] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.140] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.141] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.144] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.148] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:47:54.151] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.151] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:47:54.153] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.156] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.156] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.158] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.158] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.165] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.169] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.172] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.175] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.178] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.181] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.182] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:47:54.184] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.043] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:02.045] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:48:02.045] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:02.051] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.052] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.054] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:02.056] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.057] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.059] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.061] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.063] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:48:02.065] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.067] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:48:02.068] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.070] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.072] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.078] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.080] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.082] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.084] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.088] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.090] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.095] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.096] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.107] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:02.834] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:48:02.844] [DEBUG] debugLogger - Executing (default): update gm_game_channel set status = '0' where id = '13' and gameid='1'
[2020-10-15T15:48:03.054] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:48:03.062] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:48:05.780] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:48:05.786] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:48:08.433] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:48:31.184] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:31.186] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T15:48:31.188] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:31.188] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.191] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.192] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T15:48:31.194] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.195] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.196] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.198] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.199] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T15:48:31.201] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.202] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T15:48:31.204] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.205] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.206] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.207] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.209] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.216] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.217] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.219] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.224] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.226] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.231] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.234] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:48:31.236] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T15:49:23.620] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:49:23.628] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:49:30.760] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"小米"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{小米}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"小米"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"小米"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:49:30.769] [DEBUG] debugLogger - Executing (default): update gm_game_channel set status = '0' where id = '2' and gameid='1'
[2020-10-15T15:49:31.104] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:49:31.110] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:49:39.629] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:49:39.639] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:49:40.107] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:49:40.115] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:49:42.049] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"修改渠道测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{修改渠道测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"修改渠道测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T15:49:59.041] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T15:49:59.050] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T15:50:03.976] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T16:19:44.052] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:19:44.062] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:19:44.303] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:19:44.310] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:19:45.414] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:19:45.420] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:19:48.728] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T16:19:49.912] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:19:49.922] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:20:52.034] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:20:52.047] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:21:06.109] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:21:06.119] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:21:24.901] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:24.903] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T16:21:24.904] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:24.907] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.909] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.911] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:24.911] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.912] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.914] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.915] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.917] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T16:21:24.918] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.920] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T16:21:24.921] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.922] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.924] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.925] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.927] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.932] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.934] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.939] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.941] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.944] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.947] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.952] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:24.952] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.345] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:39.349] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T16:21:39.349] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:39.353] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.354] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.356] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:39.356] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.358] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.359] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.361] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.362] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T16:21:39.363] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.365] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T16:21:39.366] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.368] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.369] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.370] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.372] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.380] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.383] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.386] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.387] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.389] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.390] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.391] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:39.394] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.070] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:57.073] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T16:21:57.074] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:57.075] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.075] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.078] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T16:21:57.080] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.083] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.084] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.086] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.087] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T16:21:57.090] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.091] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T16:21:57.093] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.095] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.097] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.109] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.111] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.114] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.117] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.118] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.121] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.122] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.127] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T16:21:57.843] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"小米"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{小米}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"小米"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"小米"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"小米"' and status = 1 and game_id ='1' ) as total
[2020-10-15T16:21:57.856] [DEBUG] debugLogger - Executing (default): update gm_game_channel set status = '0' where id = '2' and gameid='1'
[2020-10-15T16:21:58.191] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:21:58.200] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:22:00.511] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T16:22:02.434] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T16:22:02.442] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T16:39:52.765] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T17:20:51.291] [DEBUG] debugLogger - Executing (default): select * from auth_user where username = 'zhangzongchu' and password = md5(encode('281317', 'BASE64'))
[2020-10-15T17:20:51.464] [DEBUG] debugLogger - Executing (default): with qwe as (select   jsonb_array_elements_text(uids) as id  from gm_purview   ),
asd as (select a.* from gm_user a  where a.username = 'zhangzongchu')
select * from asd where id::varchar in (select id from qwe GROUP BY id )
[2020-10-15T17:20:51.561] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T17:20:51.571] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T17:20:51.586] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T17:20:54.170] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:20:54.179] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:20:56.550] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:20:56.778] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:20:56.792] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:20:56.800] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:20:57.165] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:20:57.172] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:20:59.730] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:20:59.960] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:00.592] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T17:21:00.665] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:00.675] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T17:21:00.682] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T17:21:32.009] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:21:32.012] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:21:32.013] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:21:32.016] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.017] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.018] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:21:32.020] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.020] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.022] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.023] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.024] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:21:32.026] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.027] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:21:32.028] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.030] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.031] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.032] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.039] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.045] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.048] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.049] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.050] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.052] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.054] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.057] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:32.057] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:21:37.419] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T17:21:37.427] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T17:21:37.439] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T17:21:37.779] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:37.897] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:42.462] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T17:21:42.469] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T17:21:42.478] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T17:21:42.693] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T17:21:45.383] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T17:21:45.394] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:45.405] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T17:21:45.410] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T17:21:45.794] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T17:21:47.749] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:21:47.750] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:21:47.761] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:21:47.766] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:21:52.071] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:52.080] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:54.064] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:54.071] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:54.540] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:54.546] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:54.790] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:54.795] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:54.874] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:21:54.883] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:21:56.555] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 40 offset 0
[2020-10-15T17:21:56.561] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:25:00.398] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"终极王者测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{终极王者测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"终极王者测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"终极王者测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T17:25:00.407] [DEBUG] debugLogger - Executing (default): update gm_game_channel set status = '0' where id = '10' and gameid='1'
[2020-10-15T17:25:00.609] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 40 offset 0
[2020-10-15T17:25:00.615] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:28:45.025] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:28:45.028] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:28:45.031] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:28:45.032] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.033] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.035] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:28:45.037] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.039] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.041] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.044] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.045] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:28:45.048] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.048] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:28:45.049] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.051] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.052] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.053] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.054] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.060] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.063] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.069] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.071] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.073] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.074] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.076] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:28:45.078] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.182] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:29:10.187] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:29:10.188] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:29:10.191] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.191] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.193] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:29:10.194] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.197] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.198] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.199] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.201] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:29:10.202] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.204] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:29:10.208] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.219] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.226] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.232] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.240] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.246] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.391] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.401] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.409] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.413] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.414] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.416] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:10.417] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:29:24.899] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"久游"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{久游}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"久游"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"久游"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"久游"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"久游"' and status = 1 and game_id ='1' ) as total
[2020-10-15T17:29:27.122] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"修改渠道测试"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{修改渠道测试}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"修改渠道测试"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"修改渠道测试"' and status = 1 and game_id ='1' ) as total
[2020-10-15T17:29:28.480] [DEBUG] debugLogger - Executing (default): with asd as (update gm_game_channel set status = '0' where id = '12' and gameid='1' returning channel  )
		select deleteChannel('1',channel ) from asd
[2020-10-15T17:29:28.731] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 40 offset 0
[2020-10-15T17:29:28.956] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:30:27.980] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:30:28.262] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:28.269] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:28.275] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:28.989] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:28.996] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:29.002] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:29.540] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:29.759] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:29.765] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:30.081] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:30.089] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:30.096] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:31.096] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and  channel = '["久游"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:31.103] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and  channel = '["久游"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:31.110] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  channel = '["久游"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:32.044] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:32.050] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:32.056] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:32.345] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:32.351] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:32.358] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:32.780] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:30:33.007] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:30:33.015] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:30:33.855] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:30:34.157] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T17:30:36.032] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:30:36.086] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T17:30:39.663] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:30:39.730] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T17:30:40.695] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and '久游' = any(client) offset 0 limit 10
[2020-10-15T17:30:40.702] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and '久游' = any(client)
[2020-10-15T17:30:43.222] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:30:43.278] [DEBUG] debugLogger - Executing (default): with tableone as (select servername from gm_server GROUP BY servername having count(servername)>1),
        tabletwo as (select min(id) from gm_server GROUP BY servername HAVING count(servername)>1),
        tablethere as (select min(id) from gm_server GROUP BY servername HAVING count(servername)=1),
        tablemain as (select * from gm_server)
        select servername as value ,servername as label from  tablemain where   tablemain.gameid = 1 and  tablemain.id in (select * from tablethere ) or  tablemain.servername in  (select * from  tableone) and tablemain.id in (select * from  tabletwo)
[2020-10-15T17:30:43.349] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T17:30:43.847] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:30:44.089] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:30:54.765] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:30:54.773] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:30:57.623] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when false then  channel ='456'  else channel_id::varchar = '456' end
[2020-10-15T17:31:01.677] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='腾讯'  else channel_id::varchar = '腾讯' end
[2020-10-15T17:31:02.119] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when false then  channel ='456'  else channel_id::varchar = '456' end
[2020-10-15T17:31:02.126] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='腾讯'  else channel_id::varchar = '腾讯' end
[2020-10-15T17:31:02.857] [DEBUG] debugLogger - Executing (default): insert into gm_game_channel (channel,channel_id,gameid)values('腾讯','456','1')
[2020-10-15T17:31:03.412] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:31:04.057] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:31:12.136] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='奥里给'  else channel_id::varchar = '奥里给' end
[2020-10-15T17:31:12.518] [DEBUG] debugLogger - Executing (default): select channel,channel_id  as id from gm_game_channel where gameid =  '1' and case when true then  channel ='奥里给'  else channel_id::varchar = '奥里给' end
[2020-10-15T17:31:13.487] [DEBUG] debugLogger - Executing (default): with qwe as (select * from gm_game_channel where id = '14' and gameid = '1' limit 1 ),
			asd as (update gm_game_channel set channel = '奥里给' , channel_id = '456' where id = '14' and gameid = '1' returning *)
			select channelChangePut('奥里给',(select channel from qwe limit 1 ),'1'::int)
[2020-10-15T17:31:13.838] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:31:13.849] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:31:17.814] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:31:18.154] [DEBUG] debugLogger - Executing (default): with tableone as (select servername from gm_server GROUP BY servername having count(servername)>1),
        tabletwo as (select min(id) from gm_server GROUP BY servername HAVING count(servername)>1),
        tablethere as (select min(id) from gm_server GROUP BY servername HAVING count(servername)=1),
        tablemain as (select * from gm_server)
        select servername as value ,servername as label from  tablemain where   tablemain.gameid = 1 and  tablemain.id in (select * from tablethere ) or  tablemain.servername in  (select * from  tableone) and tablemain.id in (select * from  tabletwo)
[2020-10-15T17:31:18.405] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T17:31:18.491] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:31:18.741] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:31:18.758] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:31:18.785] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:31:27.925] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:31:27.933] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:31:28.154] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:31:28.164] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:31:28.183] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:31:28.192] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:31:28.200] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:31:28.651] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:31:28.661] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:31:28.669] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:31:28.901] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:31:29.127] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:31:29.135] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:31:29.152] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T17:31:29.160] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T17:31:29.169] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T17:31:30.809] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(channel) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-10-15T17:31:30.867] [DEBUG] debugLogger - Executing (default): select servername as label,servername as value  from (select jsonb_array_elements_text(servername) as servername   from gm_white_user  where game_id = '1')a  group BY servername
[2020-10-15T17:31:31.862] [DEBUG] debugLogger - Executing (default): select w.*,(case when w."sendtype" then '周期' else '单次' end ) as type,(case when w."sendtype" = false then '单次' when w."cycle" = 'month' then '每月' when w."cycle" = 'week' then '每周'  end) as cycles ,a.annexnames from (select 
			string_to_array(string_agg(concat(name,'  ',number,'个'),','),',') as annexnames,id
			from (select w.*,a.name from 
			(select jsonb_array_elements(annex) ->> 'name' as nameid  ,
			 jsonb_array_elements(annex) ->> 'number' as number
			,id from gm_white_smtp) w join gm_article a on a.article_id=w.nameid ) a   group by id ) a join gm_white_smtp  w on a.id = w.id where w.game_id = '1'  and w.status = '1'  ORDER BY w.id desc  limit 10 offset 0
[2020-10-15T17:31:31.873] [DEBUG] debugLogger - Executing (default): select count(id) as total from  gm_white_smtp  w where w.game_id ='1' and status = '1'
[2020-10-15T17:31:34.929] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:31:35.268] [DEBUG] debugLogger - Executing (default): select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value  from gm_client where game_id = '1' and status='1'
        union 
        select jsonb_array_elements_text(channel) as label,jsonb_array_elements_text(channel)  as value from gm_client where game_id = '1' and status='1'
[2020-10-15T17:31:35.969] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-10-15T17:31:36.431] [DEBUG] debugLogger - Executing (default): select *,(case when plaform = '["1"]' then '["安卓"]'::jsonb when plaform = '["2"]' then '["苹果"]'::jsonb when   plaform @> '["1","2"]'::jsonb then '["安卓","平果"]'::jsonb end)
         as plaforms,(select count(*) from gm_client  where game_id = '1' and status ='1' ) as total  from gm_client  where game_id = '1' and status ='1'  ORDER BY id desc limit 10 offset 0
[2020-10-15T17:31:42.031] [DEBUG] debugLogger - Executing (default): SELECT id,super_user_id as userId,game_name as gamename ,image_url as url ,false as movehover FROM "gm_game"  where case when 5 = '1'::int then id != '5' else id = '1' end and status = '1'
[2020-10-15T17:32:07.679] [DEBUG] debugLogger - Executing (default): with qwe as (select * ,group_name as groupName  from gm_purview where gid = '1' and status = '1'   and group_name is not null order by id limit 10 offset 0 ),
		asd as (select id,jsonb_array_elements_text(uids)  as uid from qwe ),
		zxc as (select a.id,b.username from asd a join auth_user b on b.id = a.uid::int ),
		zxcv as (select a.id,b.username from asd a join gm_user b on b.id = a.uid::int),
		qwer as (select * from zxc union select * from zxcv),
		asdf as (select id, string_to_array(string_agg(username, ','),',') as username from qwer GROUP BY id )
		select a.username,b.* from asdf a right join qwe b on a.id=b.id
[2020-10-15T17:32:07.689] [DEBUG] debugLogger - Executing (default): select id,username,alias,create_time as createTime from auth_user where gameid = '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:32:07.695] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_purview where gid = '1' and status = '1'    and group_name is not null
[2020-10-15T17:32:07.701] [DEBUG] debugLogger - Executing (default): select count(id) as total from auth_user   where gameid = '1' and status = '1'
[2020-10-15T17:32:14.672] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:32:14.680] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:32:20.200] [DEBUG] debugLogger - Executing (default): select (select count(id) from gm_client  where channel @> '"奥里给"' and status = 1 and game_id = '1') + 
		(select count(id) from gm_announcement where client @> '{奥里给}' and status = 1 and game_id = '1') +
		(select count(id) from gm_cdk  where channel @> '"奥里给"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_server  where channel @> '"奥里给"' and status = 1 and gameid ='1' )+
		(select count(id) from gm_smtp  where channel @> '"奥里给"' and status = 1 and game_id ='1' )+
		(select count(id) from gm_white_user  where channel @> '"奥里给"' and status = 1 and game_id ='1' ) as total
[2020-10-15T17:32:21.543] [DEBUG] debugLogger - Executing (default): with asd as (update gm_game_channel set status = '0' where id = '14' and gameid='1' returning channel  )
		select deleteChannel('1',channel ) from asd
[2020-10-15T17:32:21.881] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T17:32:21.888] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T17:32:23.814] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:32:24.154] [DEBUG] debugLogger - Executing (default): with tableone as (select servername from gm_server GROUP BY servername having count(servername)>1),
        tabletwo as (select min(id) from gm_server GROUP BY servername HAVING count(servername)>1),
        tablethere as (select min(id) from gm_server GROUP BY servername HAVING count(servername)=1),
        tablemain as (select * from gm_server)
        select servername as value ,servername as label from  tablemain where   tablemain.gameid = 1 and  tablemain.id in (select * from tablethere ) or  tablemain.servername in  (select * from  tableone) and tablemain.id in (select * from  tabletwo)
[2020-10-15T17:32:24.403] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T17:32:24.559] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:24.575] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:25.179] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:25.188] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:33.438] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:33.500] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:33.947] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:34.009] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:34.201] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:34.213] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:34.329] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:34.343] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:41.080] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:41.096] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:32:54.522] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp where  game_id= '1'  ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:32:54.538] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:33:35.263] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:33:35.267] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:33:35.267] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:33:35.270] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.271] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.273] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:33:35.275] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.275] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.277] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.278] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.279] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:33:35.281] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.282] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:33:35.284] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.284] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.286] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.287] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.288] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.295] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.297] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.300] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.306] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.307] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.311] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.311] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:35.312] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:33:48.017] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:48.028] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:33:50.221] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and plaform =  '["2"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:50.229] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and plaform =  '["2"]'
[2020-10-15T17:33:50.894] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and plaform @> '["2","1"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:50.902] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'  and plaform @> '["2","1"]'
[2020-10-15T17:33:52.556] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and plaform @> '["2","1"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:52.564] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and plaform @> '["2","1"]'
[2020-10-15T17:33:53.200] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'  and plaform =  '["2"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:53.211] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'  and plaform =  '["2"]'
[2020-10-15T17:33:54.072] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:54.080] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'
[2020-10-15T17:33:54.896] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:55.129] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233"]'::jsonb)
[2020-10-15T17:33:55.472] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:55.479] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13"]'::jsonb)
[2020-10-15T17:33:55.721] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:55.729] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223"]'::jsonb)
[2020-10-15T17:33:55.968] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223","21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223","21"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:55.975] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223","21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223","21"]'::jsonb)
[2020-10-15T17:33:56.499] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223","21","1"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223","21","1"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:56.507] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","223","21","1"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","223","21","1"]'::jsonb)
[2020-10-15T17:33:57.047] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","1"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","1"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:57.055] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","1"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","1"]'::jsonb)
[2020-10-15T17:33:57.759] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","1","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","1","11233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:57.768] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","1","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","1","11233"]'::jsonb)
[2020-10-15T17:33:58.512] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","11233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:58.747] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","11233"]'::jsonb)
[2020-10-15T17:33:58.763] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:58.772] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21"]'::jsonb)
[2020-10-15T17:33:59.216] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","11233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:59.226] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["2233","13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["2233","13","21","11233"]'::jsonb)
[2020-10-15T17:33:59.852] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["13","21","11233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:33:59.860] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["13","21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["13","21","11233"]'::jsonb)
[2020-10-15T17:34:00.572] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["21","11233"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:34:00.582] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["21","11233"]'  and  jsonb_array_length(servername) = jsonb_array_length('["21","11233"]'::jsonb)
[2020-10-15T17:34:01.199] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and servername @> '["21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["21"]'::jsonb)  and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:34:01.206] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'   and servername @> '["21"]'  and  jsonb_array_length(servername) = jsonb_array_length('["21"]'::jsonb)
[2020-10-15T17:34:02.908] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and status = 1 ORDER BY id desc limit 200 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:34:02.916] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'
[2020-10-15T17:34:04.492] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T17:34:04.500] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T17:34:04.509] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T17:34:05.325] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:34:05.513] [DEBUG] debugLogger - Executing (default): with tableone as (select servername from gm_server GROUP BY servername having count(servername)>1),
        tabletwo as (select min(id) from gm_server GROUP BY servername HAVING count(servername)>1),
        tablethere as (select min(id) from gm_server GROUP BY servername HAVING count(servername)=1),
        tablemain as (select * from gm_server)
        select servername as value ,servername as label from  tablemain where   tablemain.gameid = 1 and  tablemain.id in (select * from tablethere ) or  tablemain.servername in  (select * from  tableone) and tablemain.id in (select * from  tabletwo)
[2020-10-15T17:34:05.676] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T17:34:06.462] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:34:06.469] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:40:35.381] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:35.381] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:40:35.382] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:35.383] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.384] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.391] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:35.396] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.396] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.396] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.398] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.404] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:40:35.408] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.410] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:40:35.410] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.411] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.415] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.416] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.424] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.427] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.431] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.433] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.433] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.435] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.444] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:35.446] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:36.008] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.069] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:53.072] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:40:53.074] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:53.077] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.082] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.082] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:40:53.083] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.085] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.087] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.089] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.092] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:40:53.093] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.097] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:40:53.097] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.098] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.104] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.116] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.120] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.124] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.127] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.133] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.136] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.140] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:40:53.143] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:41:08.651] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T17:41:08.661] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T17:41:08.671] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T17:41:09.231] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T17:41:09.557] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T17:41:09.660] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T17:41:10.349] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:41:10.357] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:41:15.100] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-10-15T17:41:15.406] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-10-15T17:41:15.496] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-10-15T17:41:17.444] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T17:41:23.084] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-10-15T17:41:23.411] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-10-15T17:41:33.940] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T17:42:00.985] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '特殊道具'
[2020-10-15T17:42:04.063] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:04.074] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:42:04.540] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:04.548] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:42:09.702] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:09.712] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:42:10.184] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:10.192] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:42:13.578] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:13.587] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1'
[2020-10-15T17:42:33.035] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:33.046] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:42:33.052] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:42:33.058] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:42:33.059] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.060] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.061] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:42:33.063] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.065] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.066] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.067] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.068] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:42:33.070] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.071] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:42:33.073] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:42:33.075] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.075] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.077] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.077] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.080] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.090] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.093] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.094] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.095] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.098] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.101] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.105] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.108] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:42:33.656] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:33.665] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:42:44.047] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:44.056] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:42:44.439] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:44.448] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:42:44.934] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:42:44.940] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:43:12.005] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:43:12.007] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:43:12.008] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:43:12.009] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.011] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.013] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:43:12.014] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.015] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.017] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.020] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.022] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:43:12.023] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.028] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:43:12.029] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.033] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.040] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.042] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.048] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.050] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.055] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.056] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.062] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.066] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.069] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.222] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:12.232] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:43:25.469] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:43:25.518] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T17:44:09.139] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:44:09.142] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T17:44:09.143] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:44:09.144] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.147] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.149] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T17:44:09.150] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.151] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.152] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.154] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.156] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T17:44:09.158] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.159] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T17:44:09.161] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.162] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.164] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.166] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.166] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.176] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.178] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.179] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.182] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.183] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.186] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.189] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:09.192] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T17:44:10.218] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T17:44:10.307] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T18:41:10.625] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T18:41:10.685] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T18:41:11.036] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T18:41:11.458] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T18:41:11.531] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T18:41:11.692] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T18:41:11.764] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T18:41:12.577] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T18:41:12.811] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T18:43:28.688] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T18:43:28.693] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T18:43:28.693] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T18:43:28.695] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.700] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.703] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T18:43:28.704] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.704] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.706] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.708] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.711] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T18:43:28.713] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.713] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T18:43:28.715] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.716] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.719] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.721] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.722] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.728] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.729] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.734] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.737] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.739] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.741] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.743] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:28.745] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T18:43:30.379] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T18:43:30.472] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T18:43:59.472] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-10-15T18:43:59.751] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = 'undefined'
[2020-10-15T18:43:59.839] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-10-15T18:51:18.581] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-10-15T18:51:18.804] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-10-15T18:51:23.082] [DEBUG] debugLogger - Executing (default): select MAX(id) from gm_smtp where game_id= 1
[2020-10-15T18:51:23.408] [DEBUG] debugLogger - Executing (default): select classification as label , classification as value from gm_article where gameid =1 GROUP BY classification
[2020-10-15T18:51:31.155] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T18:51:33.617] [DEBUG] debugLogger - Executing (default): select name as label , article_id as value  , TRUE as leaf  from gm_article where gameid =1 and classification = '特殊道具'
[2020-10-15T18:51:36.427] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T18:51:36.730] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:51:36.738] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:51:36.744] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:51:37.476] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:51:37.483] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:51:37.490] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:52:49.218] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:52:49.226] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:52:49.234] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:52:49.447] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:52:49.456] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:52:49.463] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:52:49.553] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:52:49.561] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:52:49.567] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:57:47.300] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T18:57:47.301] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T18:57:49.811] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T18:57:50.114] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:57:50.121] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:57:50.127] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T18:58:55.332] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T18:58:55.341] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T18:58:55.353] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T18:58:55.958] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T18:58:55.969] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T18:58:56.103] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T18:58:56.122] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T19:11:02.344] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T19:11:02.345] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T19:11:02.352] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T19:11:02.360] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T19:12:31.763] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T19:12:32.026] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:12:33.892] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T19:12:34.009] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T19:12:34.018] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T19:12:34.027] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T19:56:20.319] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:56:21.990] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:56:23.367] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T19:56:23.377] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','4545456','1','454545','0','127.0.0.1：1234','1','Thu, 22 Oct 2020 00:00:00 GMT','["久游"]','["1"]','127.0.0.1','1234'
		) RETURNING id
[2020-10-15T19:56:23.387] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T19:56:23.395] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-10-15T19:56:23.403] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T19:58:19.851] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:58:27.454] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:58:27.806] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T19:58:29.106] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T19:58:29.115] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T19:58:29.123] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T19:58:29.411] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','445','1','454545','0','127.0.0.1：1234','1','Thu, 22 Oct 2020 00:00:00 GMT','["久游"]','["1"]','127.0.0.1','1234'
		) RETURNING id
[2020-10-15T19:58:29.418] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-10-15T19:58:39.647] [DEBUG] debugLogger - Executing (default): update  gm_server set  status = '0' where id = 15
[2020-10-15T20:02:42.273] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:02:43.379] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','445','1','454545','0','127.0.0.1：1234','1','Thu, 22 Oct 2020 00:00:00 GMT','["久游"]','["1"]','127.0.0.1','1234'
		) RETURNING id
[2020-10-15T20:02:43.388] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-10-15T20:02:43.533] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias)
				VALUES
				('79','127.0.0.1','undefined','创建区服','区服管理','创建了区服ID为 16 的区服 ','1','长澜月')
[2020-10-15T20:02:43.682] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:43.690] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:43.696] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:44.019] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:44.025] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:44.032] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:47.067] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:47.074] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:47.081] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:47.566] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:47.572] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:47.578] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:47.816] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:47.822] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:47.827] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:47.991] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:47.997] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:48.005] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:48.460] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:48.467] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:48.473] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:02:48.711] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:02:48.717] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:02:48.723] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:04.694] [DEBUG] debugLogger - Executing (default): update gm_server set display = '2' where  gameid='1' and serverid='16'
[2020-10-15T20:03:05.066] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:05.074] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:05.079] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:07.937] [DEBUG] debugLogger - Executing (default): update gm_server set display = '4' where  gameid='1' and serverid='16'
[2020-10-15T20:03:08.328] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:08.335] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:08.341] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:11.239] [DEBUG] debugLogger - Executing (default): update gm_server set display = '1' where  gameid='1' and serverid='16'
[2020-10-15T20:03:11.609] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:11.616] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:11.621] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:15.883] [DEBUG] debugLogger - Executing (default): update gm_server set display = '3' where  gameid='1' and serverid='16'
[2020-10-15T20:03:16.257] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:16.265] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:16.270] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:18.480] [DEBUG] debugLogger - Executing (default): update gm_server set display = '5' ,status = 0 where  gameid='1' and serverid='16'
[2020-10-15T20:03:18.489] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias)
				VALUES
				('79','127.0.0.1','undefined','区服停用','区服管理','停用了区服ID为 16 的区服','1','长澜月')
[2020-10-15T20:03:18.871] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:18.877] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:18.883] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:19.121] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:19.129] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:19.134] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:20.865] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:20.873] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:20.879] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:23.318] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and plaform =  '["2"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:23.325] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and plaform =  '["2"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:23.331] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and plaform =  '["2"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:24.588] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:24.596] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:24.601] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:25.280] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:25.286] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:25.292] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and plaform =  '["1"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:26.267] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'  and plaform @> '["1","2"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:26.273] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'  and plaform @> '["1","2"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:26.280] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'  and plaform @> '["1","2"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:27.274] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:27.279] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:27.285] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and plaform =  '["1"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:28.023] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and  channel = '["久游"]'  and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:28.031] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and  channel = '["久游"]'  and plaform =  '["1"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:28.038] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  channel = '["久游"]'  and plaform =  '["1"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:30.069] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and  channel = '["久游"]'  and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:30.075] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and  channel = '["久游"]'  and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:30.082] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  channel = '["久游"]'  and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:31.511] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:31.518] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:31.525] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:33.074] [DEBUG] debugLogger - Executing (default): select * from gm_server  where display='1' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:33.080] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where display='1' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:33.086] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where display='1' and gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:34.059] [DEBUG] debugLogger - Executing (default): select * from gm_server  where display='2' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:34.064] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where display='2' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:34.070] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where display='2' and gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:35.138] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:35.145] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:35.150] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:36.484] [DEBUG] debugLogger - Executing (default): select * from gm_server  where display='5' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:36.491] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where display='5' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:36.500] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where display='5' and gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:38.399] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:38.406] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:38.412] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:40.032] [DEBUG] debugLogger - Executing (default): select * from gm_server  where display='5' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:40.040] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where display='5' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:40.050] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where display='5' and gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:41.380] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:41.387] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:41.395] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:42.065] [DEBUG] debugLogger - Executing (default): select * from gm_server  where display='1' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:42.071] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where display='1' and gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:42.078] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where display='1' and gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:43.954] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:43.963] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:43.970] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:03:59.493] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:03:59.769] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:03:59.776] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:03:59.781] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:34.677] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and NOT(childrens is null) and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:34.686] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and NOT(childrens is null) and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:34.693] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and NOT(childrens is null) and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:36.887] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:36.897] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:36.912] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and (childrens is null) and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:51.867] [DEBUG] debugLogger - Executing (default): select * from gm_server  where test='1' and gameid='1'and test='1' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:51.875] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where test='1' and gameid='1'and test='1' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:51.882] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where test='1' and gameid='1'and test='1' and (childrens is null) and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:52.756] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1'and test='0' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:52.765] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1'and test='0' and (childrens is null) and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:52.774] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1'and test='0' and (childrens is null) and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:56.624] [DEBUG] debugLogger - Executing (default): update gm_server set display = '5' ,status = 0 where  gameid='1' and serverid='14'
[2020-10-15T20:04:56.635] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias)
				VALUES
				('79','127.0.0.1','undefined','区服停用','区服管理','停用了区服ID为 14 的区服','1','长澜月')
[2020-10-15T20:04:56.875] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:56.882] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:56.889] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:04:57.063] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:04:57.073] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:04:57.083] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:05:03.595] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T20:05:03.604] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T20:05:06.138] [DEBUG] debugLogger - Executing (default): select  * from   gm_game_channel    where  gameid =  '1' and status = '1'   order by id limit 10 offset 0
[2020-10-15T20:05:06.147] [DEBUG] debugLogger - Executing (default): select  count(*) from   gm_game_channel    where  gameid =  '1' and status = '1'
[2020-10-15T20:05:08.339] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:05:08.643] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:05:08.650] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:05:08.657] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:07:16.137] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:07:16.141] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:07:21.151] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:07:21.454] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:07:23.289] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:07:23.292] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:07:23.300] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:07:23.308] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:09:06.595] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:09:06.603] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:09:06.609] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:09:06.820] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:09:06.828] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:09:06.835] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:09:06.928] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:09:06.935] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:09:06.942] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:10:30.469] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:10:30.480] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:10:30.496] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:10:30.918] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:10:31.130] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:10:31.142] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:10:31.155] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:12:33.130] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:12:33.407] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:12:33.414] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:12:33.420] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:12:50.251] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:12:50.261] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:12:50.275] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:12:50.768] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:12:50.778] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:12:50.786] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:12:50.797] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:13:17.881] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:13:17.886] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:13:17.900] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:13:17.908] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:13:34.297] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:13:34.310] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:13:34.321] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:13:34.330] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:14:01.803] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:14:01.804] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:14:01.815] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:14:01.822] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:14:04.502] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:14:04.503] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:14:04.512] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:14:04.519] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:14:05.101] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:14:05.405] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:14:05.413] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:14:05.420] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:14:45.223] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:14:45.233] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:14:45.246] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:14:45.650] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:14:45.826] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:14:45.835] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:14:45.845] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:15:20.785] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:15:20.792] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:15:20.808] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:15:20.817] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:15:42.559] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:15:42.567] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:15:42.578] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:15:42.589] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:16:00.900] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:16:00.909] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:16:00.924] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:16:01.422] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:16:01.603] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:16:01.726] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:16:01.735] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:16:50.958] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:16:50.959] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:16:50.968] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:16:50.976] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:17:06.244] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:17:06.781] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:17:07.279] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:17:08.362] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:17:17.285] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:17:17.296] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:17:17.310] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:17:17.914] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:17:17.922] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:17:17.933] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:17:17.940] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:17:43.347] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:17:43.351] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:17:43.362] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:17:43.371] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:17:50.829] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:18:09.724] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:18:09.726] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:18:09.736] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:18:09.743] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:19:21.384] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:19:21.400] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:19:21.418] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:19:22.270] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:19:22.402] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:19:22.410] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:19:22.422] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:19:32.902] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:19:33.204] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:19:33.210] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:19:33.215] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:19:43.086] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:19:43.093] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:19:43.113] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:19:43.125] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:19:49.914] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:19:49.921] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:19:49.931] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:19:50.588] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:19:50.589] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:19:50.605] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:19:50.616] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:20:16.549] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:20:16.555] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:20:16.564] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:20:16.572] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:20:44.120] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:20:44.121] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:20:44.136] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:20:44.149] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:21:03.519] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:21:03.529] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:21:03.539] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:21:03.550] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:21:07.724] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:21:07.726] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:21:07.736] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:21:07.743] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:21:10.894] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:21:10.906] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:21:10.917] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:21:11.438] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:21:11.440] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:21:11.449] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:21:11.460] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:21:58.857] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:21:58.861] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:21:58.876] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:21:58.884] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:22:05.644] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:22:05.653] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:22:05.663] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:22:06.212] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:22:06.213] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:22:06.223] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:22:06.232] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:22:14.790] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:22:14.791] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:22:14.806] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:22:14.816] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:23:42.689] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:23:42.697] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:23:42.708] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:23:43.637] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:23:43.753] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:23:43.762] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:23:43.774] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:40:46.610] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:40:46.617] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:40:48.079] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:40:48.381] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:40:48.389] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:40:48.395] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:25.332] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:47:25.335] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:25.344] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:25.350] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:27.503] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:27.511] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:27.517] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:29.104] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:47:29.113] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:47:29.125] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:47:29.509] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:47:29.715] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:29.813] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:29.820] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:35.367] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:35.376] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:35.381] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:35.992] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:35.999] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:36.004] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:36.722] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:36.727] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:36.732] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:36.972] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:36.977] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:36.983] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:37.083] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:37.090] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:37.095] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:37.787] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:37.793] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:37.798] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.035] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.041] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.047] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.148] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.154] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.160] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.363] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.369] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.374] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.477] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.483] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.490] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.689] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.695] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.700] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:38.808] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:38.819] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:38.827] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:39.015] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:39.021] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:39.026] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:39.145] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:39.151] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:39.157] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:47:39.341] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:47:39.348] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:47:39.354] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:08.754] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:08.764] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:08.772] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:09.410] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:48:09.418] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:09.427] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:09.434] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:09.679] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:09.688] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:09.694] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:10.011] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:10.017] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:10.024] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:10.262] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:10.269] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:10.276] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:10.382] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:10.393] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:10.400] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:10.592] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:10.599] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:10.606] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:13.177] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:48:13.187] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:48:13.198] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:48:13.601] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:48:13.877] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:48:13.955] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:48:13.964] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:48:19.599] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:48:19.600] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:48:20.613] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  offset 0 limit 10
[2020-10-15T20:48:20.621] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1
[2020-10-15T20:48:20.866] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  offset 0 limit 10
[2020-10-15T20:48:20.873] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1
[2020-10-15T20:48:20.980] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  offset 0 limit 10
[2020-10-15T20:48:20.988] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1
[2020-10-15T20:48:43.673] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  offset 0 limit 10
[2020-10-15T20:48:43.683] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1
[2020-10-15T20:49:50.475] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:49:50.481] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T20:49:50.483] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:49:50.484] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.485] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.486] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:49:50.487] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.490] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.492] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.492] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.495] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T20:49:50.495] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.496] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T20:49:50.498] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:50.500] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.501] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.503] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.503] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.505] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.511] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.513] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.515] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.521] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.522] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.524] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.526] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.527] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:49:50.530] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:49:50.551] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:50.558] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:49:50.895] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:50.902] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:49:51.132] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:51.139] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:49:51.861] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:51.867] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:49:52.359] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:49:52.364] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:50:26.854] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:50:26.867] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:50:26.879] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:50:27.450] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:50:27.575] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:51:28.280] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '1'  offset 0 limit 10
[2020-10-15T20:51:28.287] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '1'
[2020-10-15T20:51:29.939] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '2'  offset 0 limit 10
[2020-10-15T20:51:29.947] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '2'
[2020-10-15T20:51:32.062] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '2'  offset 0 limit 40
[2020-10-15T20:51:32.070] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '2'
[2020-10-15T20:51:34.719] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '2' and '久游' = any(client)  offset 0 limit 40
[2020-10-15T20:51:34.726] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '2' and '久游' = any(client)
[2020-10-15T20:51:36.041] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '2'  offset 0 limit 40
[2020-10-15T20:51:36.047] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '2'
[2020-10-15T20:51:39.110] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 40
[2020-10-15T20:51:39.119] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:52:28.540] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:52:28.548] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:05.050] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:53:05.061] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:09.896] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:53:10.230] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:14.318] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:53:14.618] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:14.767] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:53:23.671] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:53:31.057] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:53:31.067] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:53:31.079] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:53:31.741] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:53:31.815] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:32.693] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:53:44.981] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:53:59.228] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:53:59.235] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:53:59.367] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:54:06.691] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset NaN limit undefined
[2020-10-15T20:54:20.807] [DEBUG] debugLogger - Executing (default): select a.id,a.game_name ,a.image_url as img from gm_game a join gm_purview b on b.gid = a.id where b.uids @> '79' and a.status = '1'    limit 1
[2020-10-15T20:54:20.819] [DEBUG] debugLogger - Executing (default): with qwe as (select a.url,a.pid,a.name,d.game_name,d.id as gameid, a.id,b.grede , b.purview_id,c.uid,c.gid from gm_url a join gm_url_purview  b on  a.id = b.url_id  join gm_purview c on c.id = b.purview_id join gm_game d on d.id = c.gid where  c.uids @> '79' and d.id = '1' and d.status = 1 and b.grede != 827 and c.status = 1 order by id ),
					qwer as (select * from qwe a where (select count(*) > 1 from qwe b where b.id = a.id )),
					asd as (select * from qwe a where (select count(*) =  1 from qwe b where b.id = a.id )),
					zxc as (select * from qwer where grede = '1'),
					wer as (select * from qwer where id not in (select id from zxc )
					union 
					select * from qwer where id not in (select id from zxc )),
					sdf as (select url,pid,name,gameid,grede,id from asd 
					union 
					select url,pid,name,gameid,grede,id from zxc 
					union 
					select url,pid,name,gameid,grede,id from wer ),
					ewq as (select * from sdf ORDER BY id )
					select name,(select json_agg(concat('{"url":"',url,'","name":"',name,'","meta":"',grede,'"}')::jsonb) from ewq  where ewq.pid = d.id) as children from ewq as d where pid = 0 ORDER BY d.id
[2020-10-15T20:54:20.834] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(game_name, ','), ',')  as games from (
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
			union 
			select game_name  from gm_purview a join gm_game b on a.gid = b.id  where uids @> '79' and b.status = '1' 
		) a
[2020-10-15T20:54:21.249] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:54:21.259] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:54:22.945] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:54:22.953] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:54:31.398] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:54:31.704] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:54:34.743] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '1'  offset 0 limit 10
[2020-10-15T20:54:34.749] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '1'
[2020-10-15T20:54:35.077] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:54:35.085] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:54:38.654] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '2'  offset 0 limit 10
[2020-10-15T20:54:38.660] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '2'
[2020-10-15T20:54:39.152] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:54:39.158] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:54:41.127] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '1'  offset 0 limit 10
[2020-10-15T20:54:41.133] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '1'
[2020-10-15T20:54:41.998] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1 and type = '1' and '久游' = any(client)  offset 0 limit 10
[2020-10-15T20:54:42.006] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1 and type = '1' and '久游' = any(client)
[2020-10-15T20:54:43.054] [DEBUG] debugLogger - Executing (default): select * from gm_announcement  where  game_id=1  and status = 1   offset 0 limit 10
[2020-10-15T20:54:43.061] [DEBUG] debugLogger - Executing (default): select count(*) as total  from gm_announcement  where  game_id=1  and status = 1
[2020-10-15T20:54:46.008] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:54:46.119] [DEBUG] debugLogger - Executing (default): select a as value ,a as label from  (	 select DISTINCT servername  as a from gm_server  where gameid =1 and status  = 1  ) a
[2020-10-15T20:54:46.481] [DEBUG] debugLogger - Executing (default): select 
        name as label ,
        article_id as value  from gm_article where gameid=1
[2020-10-15T20:54:47.490] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:47.761] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:48.475] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:48.640] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:49.170] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:49.243] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:49.484] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:49.558] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:50.379] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:50.649] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:50.826] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:50.898] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:51.677] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:51.751] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:52.677] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:52.846] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:54:54.143] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:54:54.374] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:55:20.981] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1' and  channel = '["久游"]'   and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:55:21.189] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and  channel = '["久游"]'  and status = 1
[2020-10-15T20:55:21.961] [DEBUG] debugLogger - Executing (default): with asd as (			
				select * from gm_smtp  where  game_id= '1'  and status = 1 ORDER BY id desc limit 50 offset 0 
			),
			dsa as (select * from gm_server),
			ssss as( select asd.servername, string_to_array(string_agg(dsa.servername, ','),',') as servernames from asd LEFT JOIN dsa on dsa.serverid::jsonb <@ (asd.servername) GROUP BY  asd.servername),
			qweqweqwe  as (select asd.* ,ssss.servernames from asd left join ssss on ssss.servername = asd.servername),
			asdasd as (select jsonb_array_elements(annex) ->> 'ID' as names, jsonb_array_elements(annex) ->> 'number' as numbers ,id  from  qweqweqwe ),
			qweqwe as (select asdasd.id,string_to_array(string_agg(concat(gm_article.name,'  ',asdasd.numbers,'个'),','),',') as annexnames from asdasd left JOIN gm_article on gm_article.article_id = asdasd.names GROUP BY asdasd.id ),
			qweasd as (select (case when plaform = '"1"' then '安卓' when plaform = '"2"' then '苹果'  end ) as plaform ,id from (select jsonb_array_elements(plaform) as plaform,id from asd )a )
			select asd.*,qweqwe.annexnames,a.plaforms from asd left join qweqwe on qweqwe.id = asd.id left
			join (select string_to_array(string_agg(plaform,','),',')as plaforms ,id from qweasd GROUP BY id )a on a.id = asd.id order by asd.id desc
[2020-10-15T20:55:22.205] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_smtp where  game_id= '1' and status = 1
[2020-10-15T20:56:39.580] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:56:39.583] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T20:56:39.586] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:56:39.587] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.589] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.590] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:56:39.591] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.592] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.593] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.595] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.596] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T20:56:39.598] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.598] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T20:56:39.599] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.600] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.602] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.603] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.604] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.610] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.612] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.616] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.620] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.622] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.622] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.625] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:56:39.626] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.235] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_announcement" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "type" VARCHAR(255), "end_time" TIMESTAMP WITH TIME ZONE, "start_time" TIMESTAMP WITH TIME ZONE, "anno_status" VARCHAR(255), "title" VARCHAR(255), "area_server_id" VARCHAR(255), "client" VARCHAR(255), "platform" INTEGER, "game_id" INTEGER, "text" VARCHAR(255), "time_interval " VARCHAR(255), "img_url" VARCHAR(255), "weights" INTEGER, "link" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:57:26.238] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_area_server" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "server_id" INTEGER, "parent_server_id" INTEGER, "name" VARCHAR(255), "platform" INTEGER, "code_show" INTEGER, "code_load" INTEGER, "is_new_server" VARCHAR(255), "open_time" TIMESTAMP WITH TIME ZONE, "resource_adde" VARCHAR(255), "ip_port" VARCHAR(255), "game_id" INTEGER, "client" VARCHAR(255)[], PRIMARY KEY ("id"));
[2020-10-15T20:57:26.239] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk_depot" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "value" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:57:26.240] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_cdk" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "cdkid" INTEGER, "name " VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "type" VARCHAR(255), "num" INTEGER, "start_time" TIMESTAMP WITH TIME ZONE, "end_time " TIMESTAMP WITH TIME ZONE, "content" VARCHAR(255), "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.243] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_dict" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "code" VARCHAR(255), "desc" VARCHAR(255), "priority" VARCHAR(255), "values" VARCHAR(255)[], "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.247] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_game" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "game_name" VARCHAR(255), "code" VARCHAR(255), PRIMARY KEY ("id"));
[2020-10-15T20:57:26.247] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "uid" INTEGER, "gid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.247] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_smtp" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "smtp_id" VARCHAR(255), "title" VARCHAR(255), "platform" VARCHAR(255), "client" VARCHAR(255), "player" VARCHAR(255), "content" VARCHAR(255), "sendtime" TIMESTAMP WITH TIME ZONE, "annex" VARCHAR(255)[], "game_id" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.248] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url_purview" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview_id" INTEGER, "url_id" INTEGER, "grede" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.250] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_url" ("id" INTEGER NOT NULL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "purview" VARCHAR(255), "url" VARCHAR(255), "pid" INTEGER, "name" VARCHAR(255), "priority" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.252] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_user" ("status" INTEGER NOT NULL DEFAULT 1 , "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "username" VARCHAR(255), "password" VARCHAR(255), "nick_name" VARCHAR(255), "avatar" VARCHAR(255), "email" VARCHAR(255), "source" INTEGER NOT NULL DEFAULT 1, "alias" VARCHAR(255), "phone" VARCHAR(255), "wechat_user_id" VARCHAR(255), "id" INTEGER NOT NULL, PRIMARY KEY ("status"));
[2020-10-15T20:57:26.254] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "gm_server" ("id"  SERIAL , "status" INTEGER DEFAULT 1, "create_user_id" INTEGER, "update_user_id" INTEGER, "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "servername" VARCHAR(255), "ip" VARCHAR(255), "address" VARCHAR(255), "plaform" VARCHAR(255), "display" VARCHAR(255), "srttime" TIMESTAMP WITH TIME ZONE, "channel" VARCHAR(255)[], "gamename" VARCHAR(255), "pid" VARCHAR(255), "serverid" VARCHAR(255), "test" VARCHAR(255), "load" VARCHAR(255), "gameid" INTEGER, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.256] [DEBUG] debugLogger - Executing (default): CREATE TABLE IF NOT EXISTS "auth_user" ("id"   SERIAL , "username" VARCHAR(255) NOT NULL, "password" VARCHAR(255) NOT NULL, "source" VARCHAR(255), "nick_name" VARCHAR(255), "status" VARCHAR(255), "version" VARCHAR(255), "create_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, "update_time" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("id"));
[2020-10-15T20:57:26.256] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_announcement' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.258] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_area_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.259] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk_depot' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.261] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_cdk' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.262] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_dict' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.268] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_game' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.270] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.274] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url_purview' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.276] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_smtp' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.279] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_url' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.280] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.282] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'gm_server' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:26.283] [DEBUG] debugLogger - Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'auth_user' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[2020-10-15T20:57:35.122] [DEBUG] debugLogger - Executing (default): select string_to_array(string_agg(channel, ','), ',')  as values  from gm_game_channel where gameid = '1' and status = '1'
[2020-10-15T20:57:35.123] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:57:35.158] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:57:35.167] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:57:39.667] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:57:52.719] [DEBUG] debugLogger - Executing (default): select servername from gm_server where gameid='1' and status = 1
[2020-10-15T20:57:53.907] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:57:53.919] [DEBUG] debugLogger - Executing (default): insert into gm_server (
			create_user_id,servername,gameid,address,test,ip_port,display,srttime,channel,plaform,ip,port
		)values(
			'79','奥里给','1','105','0','127.0.0.1:1234','1','Thu, 29 Oct 2020 20:57:47 GMT','["久游"]','["1"]','127.0.0.1','1234'
		) RETURNING id
[2020-10-15T20:57:53.927] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:57:53.933] [DEBUG] debugLogger - Executing (default): update gm_server set serverid = id
[2020-10-15T20:57:53.936] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:57:53.989] [DEBUG] debugLogger - Executing (default): INSERT into gm_logs 
				(user_id,ip,nick_name,instructions,classification,"text",game_id,alias,kwargs)
				VALUES
				('79','127.0.0.1','undefined','创建区服','区服管理','创建了区服ID为 17 的区服 ','1','长澜月','{"serverid":"","servername":"奥里给","plaform":["1"],"channel":["久游"],"ip":"127.0.0.1:1234","display":"1","srttime":"2020-10-29T12:57:47.045Z","address":"105","test":"0","page":1,"pagesize":20,"gameid":"1"}')
[2020-10-15T20:57:54.092] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:57:54.102] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:57:54.111] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:57:59.138] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:57:59.144] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:57:59.150] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
[2020-10-15T20:57:59.386] [DEBUG] debugLogger - Executing (default): select * from gm_server  where gameid='1' and status = 1 and (pid is null or  trim(pid) ='') order by id limit 20 offset (20*0)
[2020-10-15T20:57:59.393] [DEBUG] debugLogger - Executing (default): select count(*) as total from gm_server where gameid='1' and status = 1 and (pid is null or  trim(pid) ='')
[2020-10-15T20:57:59.399] [DEBUG] debugLogger - Executing (default): select max(num), display from (SELECT count(display) as num,
		case 
		when display='1' then '空闲'
		when display='2' then '繁忙'
		when display='3' then '维护'
		when display='4' then '爆满'
		end
		as display
		from gm_server where id in ( SELECT id from gm_server  where gameid='1' and  status = 1 and (pid is null or  trim(pid) ='')  ORDER BY id limit 20 offset (20*0)  ) GROUP BY display 
		union 
		select 0 as num ,'繁忙' as display
		union 
		select 0 as num ,'空闲' as display
		union
		select 0 as num ,'维护' as display
		union
		select 0 as num ,'爆满' as display
		)a GROUP BY display
